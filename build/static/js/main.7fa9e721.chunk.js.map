{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","theme/shadows.js","theme/typography.js","theme/index.js","layouts/DashboardLayout/NavBar/NavItem.js","layouts/DashboardLayout/NavBar/index.js","components/Logo.js","layouts/DashboardLayout/TopBar.js","service/AuthenticationService.js","layouts/DashboardLayout/index.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","components/Page.js","js/Constante.js","views/account/AccountView/Results.js","views/account/AccountView/Toolbar.js","views/account/service/usuarioService.js","views/account/AccountView/index.js","views/reports/DashboardView/LastTurns.js","views/reports/DashboardView/TurnsByCategory.js","views/reports/DashboardView/TurnsRecalled.js","views/reports/DashboardView/TurnsToday.js","views/reports/DashboardView/TurnsNoAcude.js","views/reports/Service/serviceDashboard.js","views/reports/DashboardView/index.js","js/solReact.js","Context.js","views/auth/LoginView.js","views/errors/NotFoundView.js","views/auth/RegisterView.js","views/auth/LogoutComponent.jsx","views/account/AccountView/Profile.js","views/audit/service/serviceAudit.js","views/audit/index.jsx","views/account/AccountView/ProfileDetails.js","views/account/AccountView/indexUsuario.js","views/station/Results.js","views/station/Toolbar.js","views/station/service/stationService.js","views/station/index.jsx","views/station/stationView.jsx","views/categoryService/Results.js","views/categoryService/Toolbar.js","views/categoryService/service/categoryService.js","views/categoryService/index.jsx","views/categoryService/categoryStation.js","views/categoryService/category.jsx","views/services/Results.js","views/services/Toolbar.js","views/services/service/servicesService.js","views/services/index.jsx","views/services/serviceView.jsx","views/kiosko/service/kioskoService.js","views/kiosko/genericTicket.js","views/kiosko/kioskoView.jsx","views/atencion/service/atencionService.js","views/atencion/estacionAtencion.jsx","views/atencion/Toolbar.js","views/atencion/atencionTurno.jsx","views/atencion/index.jsx","views/tv/Results.js","views/tv/service/tvService.js","views/tv/index.jsx","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","formControl","display","fontSize","lineHeight","color","backgrounColor","backgroundClip","border","borderRadius","transition","GlobalStyles","shadows","typography","h1","fontWeight","letterSpacing","h2","h3","h4","h5","h6","overline","theme","createMuiTheme","palette","background","dark","default","colors","common","white","paper","primary","main","indigo","secondary","text","blueGrey","coreEsES","item","paddingTop","paddingBottom","button","fontWeightMedium","justifyContent","textTransform","icon","marginRight","spacing","title","active","NavItem","className","href","rest","classes","useEffect","node","loadCSS","document","querySelector","head","firstChild","parentNode","removeChild","ListItem","clsx","disableGutters","Button","activeClassName","component","RouterLink","to","startIcon","Icon","size","mobileDrawer","desktopDrawer","top","avatar","cursor","NavBar","onMobileClose","openMobile","items","user","useLocation","pathname","content","Box","flexDirection","alignItems","p","Avatar","src","id_user","Typography","name","variant","jobTitle","Divider","List","map","flexGrow","Hidden","lgUp","Drawer","anchor","onClose","open","mdDown","defaultProps","Logo","props","alt","process","root","TopBar","onMobileNavOpen","AppBar","elevation","style","IconButton","onClick","API_URL","USER_NAME_SESSION_ATTRIBUTE_NAME","TOKEN_USER","username","password","axios","post","token","sessionStorage","setItem","this","setupAxiosInterceptors","createJWTToken","getItem","removeItem","localStorage","id","data","put","headers","interceptors","request","use","config","isUserLoggedIn","authorization","get","overflow","wrapper","flex","breakpoints","up","paddingLeft","contentContainer","DashboardLayout","useState","isMobileNavOpen","setMobileNavOpen","userDetail","setUserDetail","setItems","AuthenticationService","whoami","then","response","catch","err","console","error","loadMenuListByRol","makeMenus","toast","listaMenus","m","push","idMenu","url","iconoMenu","nombre","idRol","primerNombre","primerApellido","idUsuario","toolbar","MainLayout","Page","forwardRef","ref","children","Helmet","Constante","ID_ROL_ADMIN","ID_ROL_TECNICO","Results","encuestas","customers","columns","field","headerName","minWidth","description","sortable","type","disableClickEventBubbling","renderCell","params","onEdit","log","value","aria-label","Card","rows","pageSize","filterModel","columnField","operatorValue","importButton","exportButton","onNewEncuesta","Toolbar","marginTop","getApiUrl","UsuarioService","findByDui","dui","findByNit","nit","minHeight","Account","state","dataEncuesta","dataEncuestaFormated","loadAllEncuestas","setState","findAll","makeDataEncuesta","objEncuesta","objTemp","fechaNacimiento","moment","format","rol","Container","maxWidth","mt","Component","red","differenceIcon","differenceValue","Budget","CardContent","Grid","container","justify","gutterBottom","turnos_last_month","ChartJS","register","ArcElement","Tooltip","Legend","labels","datasets","label","borderColor","borderWidth","Sales","useTheme","options","animation","cutoutPercentage","layout","legend","maintainAspectRatio","responsive","tooltips","bodyFontColor","divider","enabled","footerFontColor","intersect","mode","titleFontColor","CardHeader","position","orange","TasksProgress","turnos_con_rellamados_hoy","green","TotalCustomers","turnos_today","TotalProfit","turno_no_acude","Dashboard","infoDasboard","setInfoDasboard","DashboardService","loadDashboardInfo","lg","sm","xl","xs","LastTurns","TurnsToday","TurnsRecalled","TurnsNoAcude","md","TurnsByCategory","cleanFormExceptThis","myForm","myfield","form","getElementById","i","elements","length","isNull2","myfieldname","setInvalid","setValid","backgroundImage","msg","undefined","innerHTML","alert","classList","add","remove","chkNum","indexOf","check_only_digits","isNaN","lastIndexOf","check_entry","valid","ok","temp","substring","toUpperCase","charAt","hr","minu","base64","split","replace","JSON","parse","atob","variable","vars","search","pair","__html","myform","required","setInvalidPrimeReact","setValidPrimeReact","getTokenUser","isUserLogin","stationSelected","ContextReact","createContext","displayName","Context","Provider","isAuth","setIsAuth","stationAttended","setStationAttended","activateAuth","USER","solReact","parseJwt","sub","registerSuccessfulLoginForJwt","selectStationToAttend","stationData","stringify","destroyStationAttended","Consumer","LoginView","setOpen","msgToast","setMsgToast","handleClose","initialValues","validationSchema","Yup","shape","max","onSubmit","values","isSubmitting","executeJwtAuthenticationService","String","message","errors","handleBlur","handleChange","handleSubmit","isSubmitionCompleted","touched","mb","TextField","fullWidth","helperText","onBlur","onChange","trim","my","disabled","Snackbar","anchorOrigin","vertical","horizontal","ContentProps","image","NotFoundView","align","textAlign","e","RegisterView","navigate","useNavigate","firstName","lastName","policy","oneOf","ml","Checkbox","checked","Link","underline","FormHelperText","LogoutComponent","logout","Profile","city","country","dateText","timezone","claveEndpoint","table","FormDialog","React","infoAudit","setInfoAudit","loadInfoAudit","serviceAudit","loadAuditByIdPedido","clave","marginLeft","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","row","scope","fecha","last_user","comentario","old_value","new_value","DialogActions","action","getQueryVariable","ProfileDetails","id_usuario","apellido","segundo_nombre","segundo_apellido","id_rol","activo","states","sexos","sexo","email","celular","telefono","estados","e_nombre","e_nombre_str","e_apellido","e_apellido_str","e_username","e_password","e_mail","e_estado","e_sexo","e_dui","sucursales","id_sucursal","fecha_nacimiento","Date","locale","msj","openAlert","severity","redirect","idParam","loadUserById","usuarioService","findById","resp","segundoNombre","segundoApellido","idSucursal","target","endsWith","e_dui_msj","validateDui","warn","e_nit","e_nit_msj","validateNit","userDui","status","parseInt","userNit","test","preventDefault","obj","idP","save","success","openModalAudit","autoComplete","noValidate","bind","subheader","LocalizationProvider","dateAdapter","DateAdapter","DatePicker","disableFuture","newValue","renderInput","select","SelectProps","native","option","handleChangeMail","mask","onChangeDui","inputProps","onChangeNit","onNew","stationService","Stations","dataFormated","loadAllStations","makeDataFormated","descripcion","fechaCreacion","idEstacion","ocupado","StationView","isLoading","loadStationById","loadAllSites","findAllSites","setTimeout","FormControlLabel","control","handleChangeChk","LinearProgress","idCateg","idCategoria","delete","Categories","loadAll","categoryService","idCategoriaTurnos","iconButton","CategoryStation","setRows","setSucursales","setIdSucursal","catStation","setCatStation","idStation","setIdStation","loadStationsbyCategory","findcategoriasPorEstacionesByIdCategoria","loadAllStationsBySite","idSite","findStationBySite","saveCategoriaEstacion","FormControl","InputLabel","Select","labelId","idData","idPk","handleChangeSucursal","MenuItem","s","idEstacionPk","find","warning","sx","idCategoriaEstacion","Category","handleChangeMulti","estacionesSeleted","prefijo","prioridad","icono","rangoPrioridad","estaciones","categoriaUpdate","loadById","loadCategoriasPorEstaciones","loadAllStation","prefijoTurno","iconoCategoria","findAllStations","e_prioridad","Services","servicesService","nombreServicio","idServicioCategoria","category","categories","e_category","loadAllCategories","iconoServicio","idCategoriaTurno","findAllCateg","KioskoService","ComponentToPrint","setRef","canvasEl","media","noConsecutivo","KioskoView","setComponentRef","componentRef","reactToPrintContent","reactToPrintTrigger","arrayCategories","arrayServices","turnoSeleted","getAllCategories","kioskoService","findAllCategories","c","onClickCapture","onClickCategory","CardActionArea","renderServices","loadServicesByIdCategory","findByIdCategories","Fragment","ListItemButton","ListItemIcon","ListItemText","idServicio","controlTurnoDetalleSet","idServiciosCategoria","click","renderCategories","fullScreen","edge","renderServicesById","documentTitle","removeAfterPrint","trigger","AtencionService","EstacionAtencion","arrayEstaciones","estacionSelected","isStationSelected","loadEstacionesDisponibles","loadSelectStationFromApi","atencionService","findOccupiedStation","setStationContext","findAllEstacionesDisponibles","onClickEstacion","renderEstaciones","maxHeight","dividers","autoFocus","handleCancel","handleOk","vacateStation","pt","SOCKET_URL","AtencionTurno","turnSelected","sendMessage","clientRefTurn","clientRef","estacion","arrayStates","SelectedState","turnDetailSelected","called","destroyStationContext","loadAllActiveStates","loadTurnInProgress","findTurnInProgress","noSolicitudes","findNextTurn","consecutivo","findAllActiveStates","BottomNavigationAction","idEstado","idState","setLoading","copyTurn","updateTurn","idControlTurno","completeTurn","loading","increaseCalled","idControlTurnoDetalle","buttons","Badge","badgeContent","invisible","onHandleFinalize","onClickNext","ButtonGroup","BottomNavigation","showLabels","event","updateState","renderStates","topics","onMessage","client","proxy","debug","atencionView","pagination","hideFooterPagination","TvView","onMessageReceived","onMessageReceivedTurn","msgToListen","Promise","resolve","reject","speakMsg","onHandleOpenModal","successMessage","onConnected","info","autoClose","posibleIndice","IDIOMAS_PREFERIDOS","vocesDisponibles","speechSynthesis","getVoices","findIndex","voz","includes","lang","textoAEscuchar","mensaje","SpeechSynthesisUtterance","voice","volume","rate","pitch","speak","loadturnToShow","tvService","findTurnToShow","controls","autoPlay","loop","muted","routes","path","element","DashboardView","App","routing","useRoutes","ThemeProvider","pauseOnFocusLoss","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7fa9e721.chunk.js","sourcesContent":["/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    html: {\r\n      '-webkit-font-smoothing': 'antialiased',\r\n      '-moz-osx-font-smoothing': 'grayscale',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    body: {\r\n      backgroundColor: '#f4f6f8',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    a: {\r\n      textDecoration: 'none'\r\n    },\r\n    '#root': {\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n\r\n    formControl: {\r\n      display: 'block',\r\n      width: '100 %',\r\n      padding: '.375rem .75rem',\r\n      fontSize: '1rem',\r\n      lineHeight: '1.5',\r\n      color: '#495057',\r\n      backgrounColor: '#fff',\r\n      backgroundClip: 'padding - box',\r\n      border: '1px solid #ced4da',\r\n      borderRadius: '.25rem',\r\n      transition: 'border - color .15s ease -in -out, box - shadow .15s ease -in -out'\r\n    }\r\n    \r\n    \r\n    \r\n  }\r\n}));\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","const shadows = [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\nexport default shadows;","const typography = {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\nexport default typography;","import { createMuiTheme, colors } from '@material-ui/core';\r\nimport shadows from './shadows';\r\nimport typography from './typography';\r\nimport { esES as coreEsES } from '@mui/material/locale';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      dark: '#F4F6F8',\r\n      default: colors.common.white,\r\n      paper: colors.common.white\r\n    },\r\n    primary: {\r\n      main: colors.indigo[500]\r\n    },\r\n    secondary: {\r\n      main: colors.indigo[500]\r\n    },\r\n    text: {\r\n      primary: colors.blueGrey[900],\r\n      secondary: colors.blueGrey[600]\r\n    }\r\n  },\r\n  shadows,\r\n  typography,\r\n  \r\n  coreEsES\r\n});\r\n\r\nexport default theme;\r\n","import React,{useEffect} from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  ListItem,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { loadCSS } from 'fg-loadcss';\r\nimport Icon from '@mui/material/Icon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  button: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: 'flex-start',\r\n    letterSpacing: 0,\r\n    padding: '10px 8px',\r\n    textTransform: 'none',\r\n    width: '100%'\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  title: {\r\n    marginRight: 'auto'\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    '& $title': {\r\n      fontWeight: theme.typography.fontWeightMedium\r\n    },\r\n    '& $icon': {\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}));\r\n\r\nconst NavItem = ({\r\n  className,\r\n  href,\r\n  icon,\r\n  title,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  useEffect(()=>{\r\n    const node = loadCSS(\r\n      'https://use.fontawesome.com/releases/v5.14.0/css/all.css',\r\n      // Inject before JSS\r\n      document.querySelector('#font-awesome-css') || document.head.firstChild,\r\n    );\r\n\r\n    return () => {\r\n      node.parentNode.removeChild(node);\r\n    };\r\n  },[])\r\n  return (\r\n    <ListItem\r\n      className={clsx(classes.item, className)}\r\n      disableGutters\r\n      {...rest}\r\n    >\r\n      <Button\r\n        activeClassName={classes.active}\r\n        className={classes.button}\r\n        component={RouterLink}\r\n        to={'/turnos'+href}\r\n        startIcon={(icon!==null&&icon!=='')?<Icon size=\"20\">{icon}</Icon>:''}\r\n      >\r\n        <span className={classes.title}>\r\n          {title}\r\n        </span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  className: PropTypes.string,\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default NavItem;\r\n","import React, { useEffect } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles,\r\n\r\n} from '@material-ui/core';\r\nimport NavItem from './NavItem';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: 'calc(100% - 64px)'\r\n  },\r\n  avatar: {\r\n    cursor: 'pointer',\r\n    width: 64,\r\n    height: 64\r\n  }\r\n}));\r\n\r\nconst NavBar = ({ onMobileClose, openMobile, items, user }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname]);\r\n\r\n  const content = (\r\n    <Box\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n    >\r\n      <Box\r\n        alignItems=\"center\"\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        p={2}\r\n      >\r\n        <Avatar\r\n          className={classes.avatar}\r\n          component={RouterLink}\r\n          src={user.avatar}\r\n          to={\"/turnos/app/usuario?action=view&id=\" + user.id_user}\r\n        />\r\n        <Typography\r\n          className={classes.name}\r\n          color=\"textPrimary\"\r\n          variant=\"h5\"\r\n        >\r\n          {user.name}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body2\"\r\n        >\r\n          {user.jobTitle}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map((item) => {\r\n            return (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />)\r\n          })}\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => { },\r\n  openMobile: false\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\n\r\nconst Logo = (props) => {\r\n  return (\r\n    <img\r\n      alt=\"Logo\"\r\n      src={process.env.PUBLIC_URL+\"/static/logo.png\"}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport Logo from 'src/components/Logo';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  }\r\n}));\r\n\r\nconst TopBar = ({\r\n  className,\r\n  onMobileNavOpen,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar\r\n      className={clsx(classes.root, className)}\r\n      elevation={0}\r\n      {...rest}\r\n    >\r\n      <Toolbar>\r\n        <RouterLink to=\"/turnos/app/dashboard\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box flexGrow={1} />\r\n        <Hidden mdDown>\r\n        <RouterLink to=\"/turnos/app/logout\" style={{textDecoration:'none',color:'white'}}>\r\n          <IconButton color=\"inherit\" >\r\n            <InputIcon />\r\n          </IconButton>\r\n          </RouterLink>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={onMobileNavOpen}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func\r\n};\r\n\r\nexport default TopBar;\r\n","import axios from 'axios';\r\n\r\n//let API_URL = 'https://eliotest-heroku-spring.herokuapp.com';\r\n//let API_URL = 'https://turnos-api.herokuapp.com';\r\nlet API_URL = 'http://queueapp.tumundoenjava.com:8080/Turnos';\r\n//let API_URL = 'http://localhost:8080';\r\n\r\nexport let USER_NAME_SESSION_ATTRIBUTE_NAME = 'user'\r\nexport let TOKEN_USER = \"token\";\r\n\r\nclass AuthenticationService {\r\n\r\n    executeJwtAuthenticationService(username, password) {\r\n        return axios.post(`${API_URL}/authenticate`, {\r\n            username,\r\n            password\r\n        })\r\n    }\r\n\r\n    registerSuccessfulLoginForJwt(username, token) {\r\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username)\r\n        sessionStorage.setItem(TOKEN_USER, token)\r\n        this.setupAxiosInterceptors(this.createJWTToken(token))\r\n\r\n    }\r\n\r\n    createJWTToken(token) {\r\n        return 'Bearer ' + token\r\n    }\r\n\r\n    getTokenUser() {\r\n        let token = sessionStorage.getItem(TOKEN_USER)\r\n        if (token === null) return ''\r\n        return token\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\r\n        localStorage.removeItem('originLoginExterno');\r\n        sessionStorage.removeItem('id_unidad');\r\n        sessionStorage.removeItem('user');\r\n        sessionStorage.removeItem('token');\r\n        sessionStorage.removeItem('ROLE');\r\n        sessionStorage.removeItem('EXP_DATE');\r\n        sessionStorage.removeItem('INST');\r\n        sessionStorage.removeItem('idUnidadRecurso');\r\n    }\r\n\r\n    modifyUnidadRecurso(id, data) {\r\n        return axios.put(`${API_URL}/unidad_recurso/${id}`, data,\r\n            { headers: { 'Authorization': \"Bearer \" + sessionStorage.getItem(\"token\") } })\r\n    }\r\n\r\n    isUserLoggedIn() {\r\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\r\n        if (user === null) return false\r\n        //console.log(user+\".....\")\r\n        return true\r\n    }\r\n\r\n    getLoggedInUserName() {\r\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\r\n        if (user === null) return ''\r\n        return user\r\n    }\r\n\r\n    setupAxiosInterceptors(token) {\r\n        axios.interceptors.request.use(\r\n            (config) => {\r\n                if (this.isUserLoggedIn()) {\r\n                    config.headers.authorization = token\r\n                }\r\n                //console.log(config+\" ***** \")\r\n                return config\r\n            }\r\n        )\r\n    }\r\n    getApiUrl() {\r\n        let apiUrl = API_URL;\r\n        if (apiUrl === null) return ''\r\n        return apiUrl\r\n    }\r\n\r\n    whoami(){\r\n        return axios.get(`${API_URL}/admin/user/whoami`);\r\n    }\r\n\r\n    loadMenuListByRol(){\r\n        return axios.get(`${API_URL}/admin/menurol/rol`);\r\n    }\r\n}\r\nexport default new AuthenticationService();\r\nexport const whoami = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${API_URL}/admin/user/whoami`);\r\n        return { data };\r\n        //return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\nexport const fetchUserDetails = async (username) => {\r\n    try {\r\n        const { data } = await axios.get(`${API_URL}/admin/user/username/${username}`);\r\n        return { data };\r\n        //return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport NavBar from './NavBar';\r\nimport TopBar from './TopBar';\r\nimport AuthenticationService from 'src/service/AuthenticationService';\r\n\r\nimport { toast } from 'react-toastify';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    }\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst DashboardLayout = () => {\r\n  const classes = useStyles();\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n  const [userDetail, setUserDetail] = useState(null);\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    function loadUserDetails() {\r\n      AuthenticationService.whoami()\r\n        .then(response => {\r\n          //console.log(response.data)\r\n          setUserDetail(response.data)\r\n        }).catch(err => {\r\n          console.error(err)\r\n        })\r\n    }\r\n\r\n    const loadMenuListByRol = () => {\r\n      AuthenticationService.loadMenuListByRol()\r\n        .then(response => {\r\n          //console.log(response.data)\r\n          setItems(makeMenus(response.data))\r\n        }).catch(err => {\r\n          toast.error('Error al cargar menus de usuario')\r\n          makeMenus([])\r\n        })\r\n    }\r\n    loadUserDetails();\r\n    loadMenuListByRol();\r\n  }, []);\r\n\r\n  const makeMenus = (data) => {\r\n    try {\r\n      let listaMenus = []\r\n      data.map(\r\n        m => {\r\n          return (\r\n            listaMenus.push(\r\n              {\r\n                href: m.idMenu.url,\r\n                icon: (m.idMenu.iconoMenu !== null && m.idMenu.iconoMenu !== '') ? m.idMenu.iconoMenu : '',\r\n                title: m.idMenu.nombre\r\n              }\r\n            )\r\n          )\r\n        }\r\n      )\r\n      //Agrega de ultimo el menu de Salir\r\n      listaMenus.push(\r\n        {\r\n          href: '/app/logout',\r\n          icon: 'logout',\r\n          title: 'Salir'\r\n        },\r\n      )\r\n      return listaMenus;\r\n    } catch (err) {\r\n      return []\r\n    }\r\n  }\r\n\r\n  //Variable de info del usuario\r\n  const user = {\r\n    avatar: '/static/images/avatars/default-avatar.png',\r\n    jobTitle: (userDetail != null) ? userDetail.username + ' (' + userDetail.idRol.nombre + ') ' : 'loading',\r\n    name: (userDetail != null) ? userDetail.primerNombre + \" \" + userDetail.primerApellido : 'loading',\r\n    id_user: (userDetail != null) ? userDetail.idUsuario : 0\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <NavBar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n        items={items}\r\n        user={user}\r\n      />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Logo from 'src/components/Logo';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {},\r\n  toolbar: {\r\n    height: 64\r\n  }\r\n}));\r\n\r\nconst TopBar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar\r\n      className={clsx(classes.root, className)}\r\n      elevation={0}\r\n      {...rest}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        <RouterLink to=\"/turnos\">\r\n          <Logo style={{margin:10,height:'90%'}} />\r\n        </RouterLink>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TopBar;\r\n","import React from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport TopBar from './TopBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst MainLayout = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","/* eslint-disable react/display-name */\r\nimport React, { forwardRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Page = forwardRef(({\r\n  children,\r\n  title = '',\r\n  ...rest\r\n}, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","/**\r\n * Script constantes en JavaScript escritos por Eliezer Hernández, eliohernandez94@gmail.com.com. *\r\n * @author Eliezer Hernández\r\n * @version 1.0\r\n * Fecha\t\tCR\t     Nombre\t\t\t\tDescripcion\r\n * ------------\t-------- ------------------- ---------------------------------------------\r\n * 04/04/2021\tENC-2\t Eliezer Hernandez\tVariables globales.\r\n \r\n * LAST LINE HISTORY\r\n * */\r\n\r\nconst Constante = {\r\n    ID_ROL_ADMIN:1,\r\n    ID_ROL_TECNICO:2,\r\n}\r\nexport default Constante;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Card,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Constante from 'src/js/Constante';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Results = ({ className, customers, encuestas,user, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'No. Usuario', minWidth: 100},\r\n    { field: 'nombre', headerName: 'Nombre Usuario', minWidth: 300,flex: 1 },\r\n    { field: 'username', headerName: 'Username', minWidth: 200 },\r\n    { field: 'rol', headerName: 'Rol', minWidth: 200 },\r\n    { field: 'fechaNacimiento', headerName: 'Fecha Nacimiento', description: 'Fecha de nacimiento del usuario',\r\n      sortable: false,\r\n      minWidth: 400,flex:0.5,\r\n      type: 'dateTime'\r\n    },\r\n    { field: 'button', headerName: 'Accion', minWidth: 200,disableClickEventBubbling: true,flex: 0.5,\r\n    renderCell: (params) => {\r\n      const onClick = () => {\r\n        console.log(params.value)\r\n        window.location = \"usuario?action=view&id=\"+params.value\r\n      };\r\n      const onEdit = () => {\r\n        console.log(params.value)\r\n        window.location = \"usuario?action=update&id=\"+params.value\r\n      };\r\n      return <>\r\n        <IconButton aria-label=\"Ver\" onClick={onClick}>\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n        {(user != null && user.idRol.idRol === Constante.ID_ROL_ADMIN) &&\r\n        <>\r\n          <IconButton aria-label=\"Ver\" onClick={onEdit}>\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton aria-label=\"Ver\" onClick={onEdit}>\r\n            <InfoIcon />\r\n          </IconButton>\r\n          </>\r\n          }\r\n      </>\r\n    }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid rows={encuestas} columns={columns} pageSize={5}\r\n      filterModel={{\r\n        items: [\r\n          { columnField: 'nombre', operatorValue: 'contains', value: '' },\r\n        ],\r\n      }}/>\r\n    </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  encuestas: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Results;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst onNewEncuesta = ()=>{\r\n  window.location = \"usuario?action=new\"\r\n}\r\n\r\nconst Toolbar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={onNewEncuesta}\r\n          style={{marginTop:10}}\r\n        >\r\n          Crear Usuario\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Toolbar;\r\n","import AuthenticationService from '../../../service/AuthenticationService';\r\nimport axios from 'axios'\r\nconst API_URL = AuthenticationService.getApiUrl();\r\n\r\n\r\nclass UsuarioService {\r\n\r\n    findAll() {\r\n        return axios.get(`${API_URL}/admin/user/`);\r\n    }\r\n\r\n    findById(id) {\r\n        return axios.get(`${API_URL}/admin/user/${id}`);\r\n    }\r\n\r\n    save(data){\r\n        return axios.post(`${API_URL}/admin/user/`,data);\r\n    }\r\n\r\n    update(id, data){\r\n        return axios.put(`${API_URL}/detalle/${id}`, data);\r\n    }\r\n\r\n    updateusuario(id, data){\r\n        return axios.put(`${API_URL}/admin/user/${id}`, data);\r\n    }\r\n\r\n    whoami(){\r\n        return axios.get(`${API_URL}/admin/user/whoami`);\r\n    }\r\n}\r\n\r\nexport const findByDui = async (dui) => {\r\n    try {\r\n        const data = await axios.get(`${API_URL}/admin/user/dui/${dui}`);\r\n        return data;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const findByNit = async (nit) => {\r\n    try {\r\n        const data = await axios.get(`${API_URL}/admin/user/nit/${nit}`);\r\n        return data;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\nexport default new UsuarioService();","import React, { Component} from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Results from './Results';\r\nimport Toolbar from './Toolbar';\r\nimport UsuarioService from '../service/usuarioService';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport default class Account extends Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      dataEncuesta:[],\r\n      dataEncuestaFormated:[],\r\n      user:null\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.loadAllEncuestas()\r\n    this.userDetail()\r\n  }\r\n\r\n  userDetail (){\r\n    UsuarioService.whoami()\r\n      .then(response=>{\r\n        //console.log(\"response :\"+response.data)\r\n        this.setState( {user:response.data})\r\n      }).catch(\r\n        err=>{\r\n          console.error(err)\r\n        }\r\n      )\r\n  }\r\n\r\n  loadAllEncuestas(){\r\n    UsuarioService.findAll()\r\n    .then(response=>{\r\n      //console.log(response.data)\r\n      this.setState({dataEncuesta:response.data})\r\n      this.makeDataEncuesta(response.data)\r\n    }).catch(\r\n      err=>{\r\n        console.error(err)\r\n      }\r\n    )\r\n  }\r\n\r\n  makeDataEncuesta(objEncuesta){\r\n    let objTemp = []\r\n    objEncuesta.map(\r\n      a=>{ return(\r\n        objTemp.push(\r\n          {\r\n            nombre: a.primerNombre+' '+a.primerApellido,\r\n            username:a.username,\r\n            fechaNacimiento: moment(a.fechaNacimiento).format('DD/MM/YYYY'),\r\n            id: a.idUsuario,\r\n            rol: a.idRol.nombre,\r\n            button:a.idUsuario\r\n          }\r\n        ))\r\n      }\r\n    )\r\n      this.setState({dataEncuestaFormated:objTemp})\r\n    //console.log(objTemp)\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Page\r\n        className={useStyles.root}\r\n        title=\"Lista de Usuarios\"\r\n      >\r\n        <Container maxWidth={false}>\r\n          <Toolbar  />\r\n          <Box mt={3}>\r\n            <Results  encuestas={this.state.dataEncuestaFormated} user={this.state.user} />\r\n          </Box>\r\n        </Container>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.red[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.red[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.red[900],\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Budget = ({ className,data, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={1}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"subtitle2\"\r\n            >\r\n              TURNOS ATENDIDOS LOS ÚLTIMOS 30 DÍAS\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              {(data!==null)?data.turnos_last_month:0}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <AssignmentIndIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nBudget.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Budget;\r\n","import React from 'react';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  CardContent,\r\n  Box,\r\n  useTheme\r\n} from '@mui/material'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@mui/styles'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nexport const data = {\r\n  labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n  datasets: [\r\n    {\r\n      label: '# of Votes',\r\n      data: [12, 19, 3, 5, 2, 3],\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)',\r\n        'rgba(54, 162, 235, 0.2)',\r\n        'rgba(255, 206, 86, 0.2)',\r\n        'rgba(75, 192, 192, 0.2)',\r\n        'rgba(153, 102, 255, 0.2)',\r\n        'rgba(255, 159, 64, 0.2)',\r\n      ],\r\n      borderColor: [\r\n        'rgba(255, 99, 132, 1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)',\r\n      ],\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n};\r\n\r\n\r\n\r\nconst Sales = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.default,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardHeader title=\"Turnos atendidos por categoría\" />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          height={300}\r\n          position=\"relative\"\r\n        >\r\n          <Doughnut data={data} options={options} />\r\n        </Box>\r\n      </CardContent>\r\n    </Card>)\r\n}\r\n\r\nexport default Sales;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.orange[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}));\r\n\r\nconst TasksProgress = ({ className,data, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={1}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TURNOS RELLAMADOS HOY\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              {(data!==null)?data.turnos_con_rellamados_hoy:0}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <InsertChartIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTasksProgress.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TasksProgress;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.green[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.green[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.green[900],\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst TotalCustomers = ({ className,data, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={1}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TURNOS ATENDIDOS HOY\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              {(data!==null)?data.turnos_today:0}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <PeopleIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalCustomers.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalCustomers;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.indigo[600],\r\n    height: 56,\r\n    width: 56\r\n  }\r\n}));\r\n\r\nconst TotalProfit = ({ className,data, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TURNOS QUE NO ACUDIERON\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              {(data!==null)?data.turno_no_acude:0}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <AssignmentIcon />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalProfit.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalProfit;\r\n","import AuthenticationService from '../../../service/AuthenticationService';\r\nimport axios from 'axios'\r\nconst API_URL = AuthenticationService.getApiUrl();\r\n\r\n\r\nclass DashboardService {\r\n\r\n    loadDashboardInfo() {\r\n        return axios.get(`${API_URL}/turno/dashboard`);\r\n    }\r\n\r\n    loadDashboardInfo2() {\r\n        return axios.get(`${API_URL}/encuesta/dashboard2`);\r\n    }\r\n\r\n    whoami(){\r\n        return axios.get(`${API_URL}/admin/user/whoami`);\r\n    }\r\n}\r\n\r\nexport default new DashboardService();","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport LastTurns from './LastTurns';\r\nimport TurnsByCategory from './TurnsByCategory';\r\nimport TurnsRecalled from './TurnsRecalled';\r\nimport TurnsToday from './TurnsToday';\r\nimport TurnsNoAcude from './TurnsNoAcude';\r\nimport DashboardService from '../Service/serviceDashboard';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n  const [infoDasboard, setInfoDasboard] = useState(null);\r\n\r\n  useEffect(() => {\r\n    function loadDashboardInfo() {\r\n      DashboardService.loadDashboardInfo()\r\n        .then(response => {\r\n          //console.log(response.data)\r\n          setInfoDasboard(response.data)\r\n        }).catch(err => {\r\n          console.error(err)\r\n        })\r\n    }\r\n    loadDashboardInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Dashboard\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <LastTurns data={infoDasboard} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TurnsToday data={infoDasboard} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TurnsRecalled data={infoDasboard} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TurnsNoAcude data={infoDasboard} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={12}\r\n            xl={9}\r\n            xs={12}\r\n          >\r\n            <TurnsByCategory />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","/* eslint-disable no-empty */\r\n/* eslint-disable no-unused-vars */\r\n/**\r\n * Script varios en JavaScript escritos por Eliezer Hernández, eliohernandez94@gmail.com.com. * \r\n * @author Eliezer Hernández * \r\n * @version 1.0\r\n * Fecha\t\tCR\t     Nombre\t\t\t\tDescripcion\r\n * ------------\t-------- ------------------- ---------------------------------------------\r\n * 09/01/2021\tENC-1\t Eliezer Hernandez\tValidaciones globales.\r\n \r\n * LAST LINE HISTORY\r\n * */\r\n\r\nclass solReact {//Soluciones en ReactJS\r\n    /** * Validar si un campo es vacio \r\n     * @param myfield\tCampo (<input>)\r\n     * @return\t true si el campo es vacio\r\n     */\r\n    isNull(myfield) {\r\n        return this.isNull2(myfield, myfield.name);\r\n    }\r\n    isNull2(myfield, myfieldname) {\r\n        if (myfield.type === \"select-one\" && (myfield.value === \"\" || myfield.value === \"0\" || myfield.value === \"-1\")) {\r\n            this.setInvalid(myfield, \"Este campo no puede quedar vacío.\" + ((myfieldname === null) ? \"\" : \" (\" + myfieldname + \")\"));\r\n            return (true);\r\n        }\r\n        else {\r\n            if (myfield.value === \"\") {\r\n                this.setInvalid(myfield, \"Este campo no puede quedar vacío.\" + ((myfieldname === null) ? \"\" : \" (\" + myfieldname + \")\"));\r\n                return (true);\r\n            }\r\n            else {\r\n                this.setValid(myfield);\r\n                return (false);\r\n            }\r\n        }\r\n    }\r\n\r\n    setValid(myfield) {\r\n        if (myfield) {\r\n            if (myfield.style) {\r\n                if (myfield.className === \"mdt\" || myfield.className === \"mdtR\") {\r\n                    myfield.style.background = \"none repeat-x scroll center bottom #fffff9\";\r\n                }\r\n                else {\r\n                    myfield.style.background = \"none repeat-x scroll center bottom #FFFFFF\";\r\n                }\r\n                myfield.style.borderColor = \"#28a745\";\r\n                myfield.style.backgroundImage = \"\";\r\n            }\r\n            if (document.getElementById(myfield.name + '_img'))\r\n                document.getElementById(myfield.name + '_img').src = 'images/validated.gif';\r\n            if (document.getElementById(myfield.name + '_span')) {\r\n                document.getElementById(myfield.name + '_span').style.display = \"none\";\r\n            }\r\n            if(document.getElementById(myfield.name)){\r\n                document.getElementById(myfield.name).style.borderColor = \"#28a745\";\r\n            }\r\n        }\r\n    }\r\n\r\n    setInvalid(myfield, msg) {\r\n        if(msg===undefined || msg===''){\r\n            msg= \"Campo requerido\";\r\n        }\r\n        if (document.getElementById(myfield.name + '_img'))\r\n            document.getElementById(myfield.name + '_img').src = 'images/exclamation.gif';\r\n        if (document.getElementById(myfield.name + '_span')) {\r\n            document.getElementById(myfield.name + '_span').innerHTML = msg;\r\n            document.getElementById(myfield.name + '_span').style.display = \"block\";\r\n            document.getElementById(myfield.name + '_span').style.fontSize = '80%';\r\n            document.getElementById(myfield.name + '_span').style.marginTop = '.25rem';\r\n            document.getElementById(myfield.name + '_span').style.color = \"#dc3545\";\r\n        } else {\r\n            alert(msg);\r\n        }\r\n        if (myfield.style) {\r\n            if (myfield.className === \"mdt\" || myfield.className === \"mdtR\")\r\n                myfield.style.background = \"none repeat-x scroll center bottom #ffff99\";\r\n            else{\r\n                myfield.style.background = \"none repeat-x scroll center bottom #FFFFFF\";\r\n                myfield.style.backgroundImage = \"url(images/invalid_line.gif)\";\r\n                myfield.style.borderColor = \"#dc3545\";\r\n                if(document.getElementById(myfield.name)){\r\n                    document.getElementById(myfield.name).style.borderColor = \"#dc3545\";\r\n                }\r\n                \r\n            }            \r\n        }\r\n    }\r\n\r\n    /*** Validar si un campo contiene un numero positivo valido (entero o flotante, no vacio).* \r\n    * @param myfield\tCampo (<input>)\r\n    * @return\t true si el campo es valido\r\n    */\r\n    setInvalidPrimeReact(myfield, msg) {\r\n        if(msg===undefined || msg===''){\r\n            msg= \"Campo requerido\";\r\n        }\r\n        if (document.getElementById(myfield.name + '_span')) {\r\n            document.getElementById(myfield.name + '_span').innerHTML = msg;\r\n            document.getElementById(myfield.name + '_span').style.display = \"block\";\r\n            document.getElementById(myfield.name + '_span').style.fontSize = '80%';\r\n            document.getElementById(myfield.name + '_span').style.marginTop = '.25rem';\r\n            document.getElementById(myfield.name + '_span').style.color = \"#dc3545\";\r\n        }\r\n        if(document.getElementById(myfield.name)){\r\n            document.getElementById(myfield.name).classList.add(\"p-invalid\");\r\n        }\r\n    }\r\n\r\n    /*** Validar si un campo contiene un numero positivo valido (entero o flotante, no vacio).* \r\n    * @param myfield\tCampo (<input>)\r\n    * @return\t true si el campo es valido\r\n    */\r\n    setValidPrimeReact(myfield, msg) {    \r\n    if(document.getElementById(myfield.name)){\r\n        document.getElementById(myfield.name).classList.remove(\"p-invalid\");\r\n        document.getElementById(myfield.name).style.borderColor = \"#28a745\";\r\n    }\r\n    if (document.getElementById(myfield.name + '_span')) {\r\n        document.getElementById(myfield.name + '_span').style.display = \"none\";\r\n    }\r\n}\r\n\r\n    /*** Validar si un campo contiene un numero positivo valido (entero o flotante, no vacio).* \r\n    * @param myfield\tCampo (<input>)\r\n    * @return\t true si el campo es valido\r\n    */\r\n    isNumberPos(myfield) {\r\n        var chkNum = true;\r\n        if ((myfield.value !== '' && myfield.value.indexOf('.') === 0)) {\r\n            myfield.value = '0' + myfield.value;\r\n        }\r\n        if (myfield.value === \"\") {\r\n            this.setInvalid(myfield, \"Este campo tiene que contener un número POSITIVO.\");\r\n            myfield.value = '0';\r\n            chkNum = (false);\r\n        }\r\n        else if (!this.check_only_digits(myfield)) {\r\n            if (myfield.value === \"\")\r\n                myfield.value = '0';\r\n            chkNum = (false);\r\n        }\r\n        if ((myfield.value !== '' && isNaN(myfield.value)) || myfield.value.indexOf('.') !== myfield.value.lastIndexOf('.')) {\r\n            this.setInvalid(myfield, \"Número no válido. Verifíquelo.\");\r\n            myfield.value = \"0\";\r\n            chkNum = (false);\r\n        }\r\n        if (chkNum) {\r\n            this.setValid(myfield);\r\n        }\r\n        return chkNum;\r\n    }\r\n    /*** Valida que el campo solo contiene los caracteres: 0123456789 y el punto.* \r\n    * Modifica el valor del campo quitando lo caracteres no permitidos.* \r\n    * @param myfield\tCampo (<input>)\r\n    * @return\t true si solo contienia caracteres permitidos, false si contenia caracteres prohibido y entonces es quito modificando el valor del campo \r\n    */\r\n    check_only_digits(myfield) {\r\n        return this.check_entry(myfield,\r\n            \"0123456789.\",\r\n            \"Solo números positivos son aceptados. No espacio, subraya, etc...\"\r\n        );\r\n    }\r\n    check_entry(myfield, valid, msg) {\r\n        var ok = \"yes\";\r\n        var temp = \"\";\r\n        for (var i = 0; i < myfield.value.length; i++) {\r\n            temp = \"\" + myfield.value.substring(i, i + 1);\r\n            if (valid.indexOf(temp) === -1) { ok = \"no\"; }\r\n        }\r\n        if (ok === \"no\") {\r\n            temp = \"\";\r\n            myfield.value = myfield.value.toUpperCase();\r\n            for (let i = 0; i < myfield.value.length; i++) {\r\n                if (valid.indexOf(myfield.value.charAt(i)) === \"-1\") { }\r\n                else { temp += myfield.value.charAt(i); }\r\n            }\r\n            myfield.value = temp;\r\n            this.setInvalid(myfield, msg + \" Valor modificado para hacer cumplir la regla. Verifíquelo!\");\r\n            return (false);\r\n        }\r\n        else {\r\n            this.setValid(myfield);\r\n            return (true);\r\n        }\r\n    }\r\n    /**\r\n* Validar si un campo contiene una hora valida (formato hh:mm) y en un cierto rango de fechas, y no este vacia.\r\n* \r\n* @param myfield\tCampo (<input>)\r\n* @return\t true si la hora es valida\r\n*/\r\n    check_Hr(myfield) {\r\n        this.check_entry(myfield,\r\n            \"0123456789:\",\r\n            \"El formato de la hora no esta correcto. El formato es hh:mm. Valor modificado para hacer cumplir la regla. VERIFICALO!\"\r\n        );\r\n        if (myfield.value.length < 1 || myfield.value.length > 5\r\n            || (myfield.value.length > 2 && myfield.value.indexOf(\":\") === -1)\r\n            || (myfield.value.length > 2 && myfield.value.length < 5)\r\n        ) {\r\n            this.setInvalid(myfield, \"La hora es obligatoria. El formato es hh:mm\");\r\n            return false;\r\n        } else {\r\n\r\n            var hr = myfield.value.substring(0, 1);\r\n            if (myfield.value.length > 1) { hr = myfield.value.substring(0, 2); }\r\n            var minu = '0';\r\n            if (myfield.value.length < 1) { minu = 'NA'; }\r\n            if (myfield.value.length === 5) { minu = myfield.value.substring(3, 5); }\r\n            if ((isNaN(hr)) || (isNaN(minu))) {\r\n                this.setInvalid(myfield, \"La hora es obligatoria. El formato es hh:mm\");\r\n                return false;\r\n            }\r\n            else if ((hr > 23) || (minu > 59)) {\r\n                this.setInvalid(myfield, \"La hora es obligatoria. El formato es hh:mm\");\r\n                return false;\r\n            }\r\n            else {\r\n                this.setValid(myfield);\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    parseJwt(token) {\r\n        var base64Url = token.split('.')[1];\r\n        var base64 = base64Url.replace('-', '+').replace('_', '/');\r\n        //var date = new Date(1572575093*1000);//Convertir fecha unix a fecha normal javascript\r\n        \r\n        return JSON.parse(window.atob(base64));\r\n    }\r\n    getQueryVariable(variable) {    \r\n        var query = window.location.search.substring(1);    \r\n        var vars = query.split(\"&\");\r\n        for (var i=0; i < vars.length; i++) {\r\n            var pair = vars[i].split(\"=\");\r\n            if(pair[0] === variable) {\r\n                return pair[1];\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n    * Limpiar formulario , poner todos valores en vacio.\r\n    * \r\n    * @param  form\tId form (<form>)\r\n    * @param  form\tId del field de excepcion field (<input o cualquier otro>)\r\n    * @return\t true Si todo correcto\r\n    */\r\n    cleanFormExceptThis= async (myForm,myfield)=> {\r\n        let form = document.getElementById(myForm);\r\n        for(var i=0;i<form.elements.length;i++){\r\n            console.log(form.elements[i].type);\r\n            if(form.elements[i].type==='text'&&form.elements[i].name!==myfield){\r\n                form.elements[i].value='';                \r\n            }\r\n        }        \r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * Funcion que retorna html interpretado para recat, en lugar de usar innerhtml\r\n    * \r\n    * @param  text\ttexto a formatear\r\n    * @return texto formateado\r\n    */\r\n    createMarkup(text) {\r\n        return {__html: text};\r\n    }\r\n\r\n    /**\r\n    * Funcion que retorna html interpretado para recat, en lugar de usar innerhtml\r\n    * \r\n    * @param  myform id del formulario a validar\r\n    * @return valida campo a campo todos los requeridos\r\n    */\r\n    validateForm(myform) {\r\n        let form = document.getElementById(myform)\r\n        for(var i=0;i<form.elements.length;i++){\r\n            console.log(form.elements[i].required);\r\n            if(form.elements[i].required){\r\n                if(form.elements[i].value===''){\r\n                    console.error(\"deberia llenarse: \"+form.elements[i].name)\r\n                    this.setInvalidPrimeReact(form.elements[i])\r\n                }else{\r\n                    this.setValidPrimeReact(form.elements[i])\r\n                }                \r\n            }\r\n        }\r\n    }\r\n\r\n}//Fin Class\r\n\r\nexport default new solReact();","import React, { createContext, useState } from \"react\";\r\nimport AuthenticationService from './service/AuthenticationService';\r\nimport solReact from './js/solReact';\r\n\r\nAuthenticationService.setupAxiosInterceptors(\r\n  AuthenticationService.createJWTToken(\r\n    AuthenticationService.getTokenUser())\r\n)\r\n\r\nconst isUserLogin = () => {\r\n  //console.log({path, element})\r\n  if (AuthenticationService.isUserLoggedIn()) {\r\n    //console.log(\"1\")\r\n    return true\r\n  } else {\r\n    //console.log(\"2\")\r\n    return false\r\n  }\r\n}\r\n\r\nconst stationSelected = () => {\r\n  return sessionStorage.getItem('station');\r\n}\r\n\r\nlet ContextReact = createContext()\r\nContextReact.displayName = 'ContextAuth';\r\n\r\nconst Provider = ({ children }) => {\r\n  const [isAuth, setIsAuth] = useState(isUserLogin)\r\n  const [stationAttended, setStationAttended] = useState(stationSelected)\r\n  //console.log('From Context:'+String(children))\r\n  const value = {\r\n    isAuth,\r\n    activateAuth: response => {\r\n      setIsAuth(true)\r\n      let test = solReact.parseJwt(response.data.token);\r\n      let USER = test.sub;\r\n      AuthenticationService.registerSuccessfulLoginForJwt(USER, response.data.token)\r\n      AuthenticationService.setupAxiosInterceptors(AuthenticationService.createJWTToken(response.data.token));\r\n    },\r\n    stationAttended,\r\n    selectStationToAttend: stationData => {\r\n      setStationAttended(JSON.stringify(stationData))\r\n      sessionStorage.setItem('station', JSON.stringify(stationData))\r\n    },\r\n    destroyStationAttended:()=>{\r\n      sessionStorage.removeItem('station');\r\n      setStationAttended(null)\r\n    }\r\n  }\r\n  //console.log(value.stationAttended)\r\n  return (\r\n    <ContextReact.Provider value={value}>\r\n      {children}\r\n    </ContextReact.Provider>\r\n  )\r\n}\r\n\r\nconst Context = {\r\n  Provider,\r\n  Consumer: ContextReact.Consumer\r\n}\r\nexport default Context;\r\n\r\n","import React, { useState }from 'react';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport AuthenticationService from '../../service/AuthenticationService';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Context from 'src/Context';\r\n\r\nimport Page from 'src/components/Page';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\n\r\nconst LoginView = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [msgToast, setMsgToast] = useState(false);\r\n\r\n  const handleClose = ()=>{\r\n    setOpen(false);\r\n  }\r\n\r\n  const showMessage = (msg)=>{\r\n    setMsgToast(msg)\r\n    setOpen(true)\r\n  }\r\n  return (\r\n    <Context.Consumer>\r\n    {({activateAuth})=>{\r\n      return(\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Login QueueApp\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              username: '',\r\n              password: ''\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              username: Yup.string().max(255).required('Usuario es requerido'),\r\n              password: Yup.string().max(255).required('Contraseña es requerida')\r\n            })}\r\n            onSubmit={(values,isSubmitting) => {\r\n              isSubmitting = true;\r\n              AuthenticationService\r\n                .executeJwtAuthenticationService(values.username, values.password)\r\n                .then((response) => {\r\n                    activateAuth(response)\r\n                    window.location = \"/turnos/app/dashboard\" //Ruta para obligar a refrescar y cargar de nuevo las rutas\r\n                    isSubmitting = false;\r\n                }).catch((err) => {\r\n                    //console.log(err.response.data.message)\r\n                    showMessage(String(err).indexOf(\"401\")>0?String(err.response.data.message):String(err))\r\n                    isSubmitting = false;\r\n                })\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitionCompleted,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Iniciar Sesión\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Ingresar a QueueApp\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.username && errors.username)}\r\n                  fullWidth\r\n                  helperText={touched.username && errors.username}\r\n                  label=\"Usuario\"\r\n                  margin=\"normal\"\r\n                  name=\"username\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={values.username.trim()}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Contraseña\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password.trim()}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitionCompleted}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Ingresar\r\n                  </Button>\r\n                </Box>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n      <Snackbar\r\n          anchorOrigin={{ vertical: 'top',\r\n          horizontal: 'center'}}\r\n          open={open}\r\n          onClose={handleClose}\r\n          variant=\"error\"\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">{msgToast}</span>}\r\n        />\r\n    </Page>\r\n      )}}\r\n    </Context.Consumer>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  makeStyles,\r\n  Button\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  image: {\r\n    marginTop: 50,\r\n    display: 'inline-block',\r\n    maxWidth: '100%',\r\n    width: 560\r\n  }\r\n}));\r\n\r\nconst NotFoundView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"404\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"md\">\r\n          <Typography\r\n            align=\"center\"\r\n            color=\"textPrimary\"\r\n            variant=\"h1\"\r\n          >\r\n            404: The page you are looking for isn’t here\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            color=\"textPrimary\"\r\n            variant=\"subtitle2\"\r\n          >\r\n            You either tried some shady route or you came here by mistake.\r\n            Whichever it is, try using the navigation\r\n          </Typography>\r\n          <Box textAlign=\"center\">\r\n            <img\r\n              alt=\"Under development\"\r\n              className={classes.image}\r\n              src={process.env.PUBLIC_URL+\"/static/images/undraw_page_not_found_su7k.svg\"}\r\n            />\r\n          </Box>\r\n          <Box textAlign=\"center\">\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={(e)=>{window.location='/turnos/app/dashboard'}}>Regresar</Button>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default NotFoundView;\r\n","import React from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst RegisterView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Register\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              username: '',\r\n              firstName: '',\r\n              lastName: '',\r\n              password: '',\r\n              policy: false\r\n            }}\r\n            validationSchema={\r\n              Yup.object().shape({\r\n                username: Yup.string().username('Must be a valid username').max(255).required('Username is required'),\r\n                firstName: Yup.string().max(255).required('First name is required'),\r\n                lastName: Yup.string().max(255).required('Last name is required'),\r\n                password: Yup.string().max(255).required('password is required'),\r\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\r\n              })\r\n            }\r\n            onSubmit={() => {\r\n              navigate('/app/dashboard', { replace: true });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Create new account\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Use your username to create new account\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.firstName && errors.firstName)}\r\n                  fullWidth\r\n                  helperText={touched.firstName && errors.firstName}\r\n                  label=\"First name\"\r\n                  margin=\"normal\"\r\n                  name=\"firstName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.lastName && errors.lastName)}\r\n                  fullWidth\r\n                  helperText={touched.lastName && errors.lastName}\r\n                  label=\"Last name\"\r\n                  margin=\"normal\"\r\n                  name=\"lastName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.lastName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.username && errors.username)}\r\n                  fullWidth\r\n                  helperText={touched.username && errors.username}\r\n                  label=\"Username Address\"\r\n                  margin=\"normal\"\r\n                  name=\"username\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"username\"\r\n                  value={values.username}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box\r\n                  alignItems=\"center\"\r\n                  display=\"flex\"\r\n                  ml={-1}\r\n                >\r\n                  <Checkbox\r\n                    checked={values.policy}\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    I have read the\r\n                    {' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </Box>\r\n                {Boolean(touched.policy && errors.policy) && (\r\n                  <FormHelperText error>\r\n                    {errors.policy}\r\n                  </FormHelperText>\r\n                )}\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign up now\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/login\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","import React, { Component } from 'react'\r\nimport AuthenticationService from '../../service/AuthenticationService';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nclass LogoutComponent extends Component {\r\n    componentDidMount(){\r\n        AuthenticationService.logout()\r\n        window.location = \"/turnos/login\"\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"container\" style={{textAlign:'center', marginTop:50}}>\r\n                    <h1>Estas saliendo de la aplicacion de encuesta</h1>\r\n                    <p>Gracias por usar nuestra aplicación. </p>\r\n                    <ThumbUpIcon fontSize=\"large\"/>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LogoutComponent","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    height: 100,\r\n    width: 100\r\n  }\r\n}));\r\n\r\nconst Profile = ({ className,user, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n        >\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={user.avatar}\r\n          />\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n            {user.name}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"h5\"\r\n          >\r\n            Usuario(Rol): {user.jobTitle}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${user.city} / ${user.country}`}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.dateText}\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      {/**<CardActions >\r\n        <Button\r\n          color=\"primary\"\r\n          fullWidth\r\n          variant=\"text\"\r\n        >\r\n          Upload picture\r\n        </Button>\r\n      </CardActions>**/}\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n","import AuthenticationService from '../../../service/AuthenticationService';\r\nimport axios from 'axios'\r\nconst API_URL = AuthenticationService.getApiUrl();\r\n\r\n\r\nclass AuditService {\r\n\r\n    loadAuditByIdPedido(claveEndpoint) {\r\n        return axios.get(`${API_URL}/auditoria/${claveEndpoint}`);\r\n    }\r\n\r\n    whoami(){\r\n        return axios.get(`${API_URL}/usuario/whoami`);\r\n    }\r\n}\r\n\r\nexport default new AuditService();","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useEffect } from 'react';\r\nimport serviceAudit from './service/serviceAudit';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\nexport default function FormDialog(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [infoAudit, setInfoAudit] = React.useState([]);\r\n    //console.log(\"En props : \" + props.clave)\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n        loadInfoAudit()\r\n    };\r\n\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const loadInfoAudit = () => {\r\n        serviceAudit.loadAuditByIdPedido(props.clave).then(\r\n            response => {\r\n                setInfoAudit(response.data)\r\n            }\r\n        ).catch(err => {\r\n            console.error(err)\r\n        })\r\n        console.log(serviceAudit.id)\r\n    }\r\n\r\n    // De forma similar a componentDidMount y componentDidUpdate\r\n    useEffect(() => {\r\n        // Actualiza el título del documento usando la API del navegador\r\n        //setOpen(props.open);\r\n        //loadInfoAudit()\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"outlined\" color=\"primary\" style={{ marginLeft: 5 }}\r\n            onClick={handleClickOpen} startIcon={<InfoIcon />}\r\n            >\r\n                Histórico\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" fullWidth maxWidth={\"lg\"}>\r\n                <DialogTitle id=\"form-dialog-title\">Histórico del registro No. {props.id}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <TableContainer component={Paper}>\r\n                            <Table className={classes.table} aria-label=\"a dense table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Fecha</TableCell>\r\n                                        <TableCell align=\"left\">Usuario</TableCell>\r\n                                        <TableCell align=\"left\">Acción</TableCell>\r\n                                        <TableCell align=\"left\">Valor anterior</TableCell>\r\n                                        <TableCell align=\"left\">Nuevo valor</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {infoAudit.map((row) => (\r\n                                        <TableRow key={row.id}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {moment(row.fecha).format(\"DD/MM/yyyy hh:mm:ss\")}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">{row.last_user}</TableCell>\r\n                                            <TableCell align=\"left\">{row.comentario}</TableCell>\r\n                                            <TableCell align=\"left\">{row.old_value}</TableCell>\r\n                                            <TableCell align=\"left\">{row.new_value}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cerrar\r\n            </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport usuarioService,{findByDui,findByNit} from '../service/usuarioService';\r\nimport solReact from 'src/js/solReact';\r\nimport FormDialog from '../../audit';\r\nimport DateAdapter from '@mui/lab/AdapterMoment';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport InputMask from 'react-input-mask';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst action = solReact.getQueryVariable(\"action\")\r\nclass ProfileDetails extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      id_usuario:'',\r\n      nombre: '',\r\n      apellido: '',\r\n      segundo_nombre:'',\r\n      segundo_apellido:'',\r\n      username: '',\r\n      password: '',\r\n      id_rol: 2,\r\n      activo: true,\r\n      states: [{value: 1,label: 'Administrador'},\r\n        {value: 2,label: 'Atención'},\r\n      ],\r\n      sexos: [{value: 'M',label: 'M'},\r\n        {value: 'F',label: 'F'},\r\n      ],\r\n      sexo:'',\r\n      email:'',\r\n      dui:'',\r\n      nit:'',\r\n      celular:'',\r\n      telefono:'',\r\n      estados: [\r\n        {\r\n          value: true,\r\n          label: 'Activo'\r\n        },\r\n        {\r\n          value: false,\r\n          label: 'Inactivo'\r\n        },\r\n      ],\r\n      e_nombre:false,\r\n      e_nombre_str:'',\r\n      e_apellido:false,\r\n      e_apellido_str:'',\r\n      e_username:false,\r\n      e_password:false,\r\n      e_mail:false,\r\n      e_estado:false,\r\n      e_sexo:false,\r\n      e_dui:false,\r\n      sucursales: [\r\n        {value: 1,label: 'Central'},\r\n        {value: 2,label: 'Santa Tecla'}\r\n      ],\r\n      id_sucursal:1,\r\n      fecha_nacimiento:new Date(),\r\n      locale:'es',\r\n      msj:'',\r\n      openAlert:false,\r\n      severity:'info',\r\n      redirect:false\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(action==='view' || action==='update'){\r\n      const idParam = solReact.getQueryVariable(\"id\")\r\n      this.loadUserById(idParam)\r\n      this.setState({id_usuario:idParam})\r\n    }\r\n\r\n  }\r\n\r\n  loadUserById(id){\r\n    usuarioService.findById(id)\r\n    .then(response=> {\r\n      let resp = response.data\r\n      this.setState({\r\n        nombre:resp.primerNombre,\r\n        segundo_nombre:resp.segundoNombre,\r\n        apellido:resp.primerApellido,\r\n        segundo_apellido:resp.segundoApellido,\r\n        username:resp.username,\r\n        password:resp.password,\r\n        id_rol:resp.idRol.idRol,\r\n        activo:resp.activo,\r\n        id_sucursal:resp.idSucursal.idSucursal,\r\n        sexo:resp.sexo,\r\n        email:resp.email,\r\n        dui:resp.dui,\r\n        nit:resp.nit,\r\n        celular:resp.celular,\r\n        telefono:resp.telefono,\r\n      })\r\n    }).catch(err=>{\r\n      console.error(err)\r\n    })\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  async onChangeDui(e){\r\n    //console.log(e.target.value)\r\n    let value = String(e.target.value)\r\n    if(value.endsWith('_')||value.endsWith('-')){\r\n      this.setState({e_dui:true,e_dui_msj:'DUI incompleto'})\r\n    }else{\r\n      this.setState({e_dui:false})\r\n      if(value!==''&& await this.validateDui(value)){\r\n        toast.warn(\"Ya existe un usuario con este número de DUI\")\r\n        this.setState({e_dui:true,e_dui_msj:\"Usuario duplicado\"})\r\n      }else{\r\n        this.setState({e_dui:false})\r\n      }\r\n    }\r\n    this.setState({dui:value})\r\n  }\r\n\r\n  async onChangeNit(e){\r\n    let value = String(e.target.value)\r\n    if(value.endsWith('_')||value.endsWith('-')){\r\n      this.setState({e_nit:true,e_nit_msj:'NIT incompleto'})\r\n    }else{\r\n      if(value!==''&& await this.validateNit(value)){\r\n        toast.warn(\"Ya existe un usuario con este número de NIT\")\r\n        this.setState({e_nit:true,e_nit_msj:\"Usuario duplicado\"})\r\n      }else{\r\n        this.setState({e_nit:false})\r\n      }\r\n    }\r\n    this.setState({nit:value})\r\n  }\r\n\r\n  async validateDui(value){\r\n    const userDui = await findByDui(value)\r\n    //console.log(userDui.error)\r\n    if(userDui.status!==undefined){\r\n      //console.log(userDui.data.idUsuario+'>'+this.state.id_usuario)\r\n      if(parseInt(this.state.id_usuario)!==parseInt(userDui.data.idUsuario)){\r\n        return true\r\n      }else{\r\n        return false\r\n      }\r\n    }else{\r\n      return false\r\n    }\r\n  }\r\n\r\n  async validateNit(value){\r\n    const userNit = await findByNit(value)\r\n    //console.log(userNit.error)\r\n    if(userNit.status!==undefined){\r\n      //console.log(userNit.data.idUsuario+'>'+this.state.id_usuario)\r\n      if(parseInt(this.state.id_usuario)!==parseInt(userNit.data.idUsuario)){\r\n        return true\r\n      }else{\r\n        return false\r\n      }\r\n    }else{\r\n      return false\r\n    }\r\n  }\r\n\r\n  handleChangeMail(e) {\r\n    let regEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if(!regEmail.test(e.target.value)){\r\n      this.setState({e_mail:true})\r\n    }else{\r\n      this.setState({\r\n        [e.target.name]: e.target.value,\r\n        e_mail:false\r\n      });\r\n    }\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n\r\n  useStyles = makeStyles(() => ({\r\n    root: {}\r\n  }));\r\n\r\n  useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: 'black',\r\n      minHeight: '20px',\r\n      paddingBottom: theme.spacing(3),\r\n      paddingTop: theme.spacing(3),\r\n      paddingLeft: 10\r\n    }\r\n  }));\r\n\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.state.nombre === '') {\r\n      toast.warn('Nombre Usuario')\r\n      this.setState({e_nombre:true})\r\n    } else if (this.state.apellido === '') {\r\n      toast.warn('Apellido')\r\n      this.setState({e_apellido:true})\r\n    } else if (this.state.username === '') {\r\n      toast.warn('Username')\r\n      this.setState({e_username:true})\r\n    } else if (this.state.password === '') {\r\n      toast.warn('Contraseña')\r\n      this.setState({e_password:true})\r\n    } else if (this.state.activo === '') {\r\n      toast.warn('Estado')\r\n      this.setState({e_estado:true})\r\n    }else if (this.state.sexo === '') {\r\n      toast.warn('Sexo')\r\n      this.setState({e_sexo:true})\r\n    } else if(this.state.dui!==null&&(this.state.dui.endsWith('-')||this.state.dui.endsWith('_'))){\r\n      toast.warn('Número DUI incompleto')\r\n    } else if(this.state.nit!==null&&(this.state.nit.endsWith('-')||this.state.nit.endsWith('_'))){\r\n      toast.warn('Número NIT incompleto')\r\n    }else if(await this.validateDui(this.state.dui)){\r\n      toast.warn('Ya existe un usuario con el DUI '+this.state.dui)\r\n    }else if(await this.validateNit(this.state.nit)){\r\n      toast.warn('Ya existe un usuario con el NIT '+this.state.nit)\r\n    }else{\r\n      let obj = {\r\n        primerNombre: this.state.nombre,\r\n        segundoNombre:this.state.segundo_nombre,\r\n        primerApellido: this.state.apellido,\r\n        username: this.state.username,\r\n        password: this.state.password,\r\n        idRol: {idRol:this.state.id_rol},\r\n        idSucursal:{idSucursal:parseInt(this.state.id_sucursal)},\r\n        activo:this.state.activo,\r\n        sexo:this.state.sexo,\r\n        email:this.state.email,\r\n        dui:String(this.state.dui)===''?null:this.state.dui,\r\n        nit:this.state.nit===''?null:this.state.nit,\r\n        celular:this.state.celular,\r\n        telefono:this.state.telefono,\r\n        fechaNacimiento:this.state.fecha_nacimiento\r\n      }\r\n      if(action==='update'){\r\n        const idP = solReact.getQueryVariable(\"id\")\r\n        obj.idUsuario = idP\r\n      }\r\n      this.save(obj)\r\n    }\r\n  }\r\n\r\n  save(data){\r\n    usuarioService.save(data)\r\n    .then(response=>{\r\n      //console.log(response)\r\n      toast.success(\"Creado correctamente!\")\r\n      this.setState({redirect:true})\r\n      window.location=\"/turnos/app/users\";\r\n    }).catch(err=>{\r\n      toast.error(String(err).substring(0,400))\r\n    })\r\n  }\r\n\r\n  openModalAudit() {\r\n    //alert(\"hola mundo\");\r\n    this.setState({ openModalAudit: true })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n        onSubmit={this.handleSubmit.bind(this)}\r\n      >\r\n        <Card>\r\n          <CardHeader\r\n            subheader=\"Detalles del usuario\"\r\n            title=\"Usuario\"\r\n          />\r\n          <Divider />\r\n          <CardContent>\r\n            <Grid\r\n              container\r\n              spacing={3}\r\n            >\r\n              <Grid\r\n                item\r\n                md={3}\r\n                xs={12}\r\n              >\r\n                <TextField\r\n                  fullWidth\r\n                  helperText={this.state.e_nombre?\"Ingresa el nombre del usuaro, por favor\":\"\"}\r\n                  label=\"Primer nombre\"\r\n                  name=\"nombre\"\r\n                  onChange={this.handleChange.bind(this)}\r\n                  required\r\n                  value={this.state.nombre}\r\n                  variant=\"outlined\"\r\n                  error={this.state.e_nombre}\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                md={3}\r\n                xs={12}\r\n              >\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Segundo nombre\"\r\n                  name=\"segundo_nombre\"\r\n                  onChange={this.handleChange.bind(this)}\r\n                  value={this.state.segundo_nombre}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                md={3}\r\n                xs={12}\r\n              >\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Primer apellido\"\r\n                  name=\"apellido\"\r\n                  onChange={this.handleChange.bind(this)}\r\n                  required\r\n                  value={this.state.apellido}\r\n                  variant=\"outlined\"\r\n                  helperText={this.state.e_apellido?\"Ingresa el Apellido del usuaro, por favor\":\"\"}\r\n                  error={this.state.e_apellido}\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                md={3}\r\n                xs={12}\r\n              >\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Segundo apellido\"\r\n                  name=\"segundo_apellido\"\r\n                  onChange={this.handleChange.bind(this)}\r\n                  value={this.state.segundo_apellido}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                md={3}\r\n                xs={12}\r\n              >\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  onChange={this.handleChange.bind(this)}\r\n                  required\r\n                  value={this.state.username}\r\n                  variant=\"outlined\"\r\n                  helperText={this.state.e_username?\"Ingresa el Username del usuaro, por favor\":\"\"}\r\n                  error={this.state.e_username}\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                md={3}\r\n                xs={12}\r\n              >\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Contraseña\"\r\n                  name=\"password\"\r\n                  onChange={this.handleChange.bind(this)}\r\n                  type=\"password\"\r\n                  value={this.state.password}\r\n                  variant=\"outlined\"\r\n                  helperText={this.state.e_password?\"Ingresa la Contraseña del usuaro, por favor\":\"\"}\r\n                  error={this.state.e_password}\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                md={3}\r\n                xs={12}\r\n              >\r\n                <LocalizationProvider  dateAdapter={DateAdapter} locale={'es'} style={{width:'100%'}}>\r\n                  <DatePicker\r\n                    label=\"Fecha de nacimiento\"\r\n                    fullWidth\r\n                    disableFuture\r\n                    value={this.state.fecha_nacimiento}\r\n                    onChange={(newValue) => {\r\n                      this.setState({fecha_nacimiento:newValue});\r\n                    }}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                  />\r\n                </LocalizationProvider>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                md={3}\r\n                xs={12}\r\n              >\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Estado\"\r\n                  name=\"activo\"\r\n                  onChange={this.handleChange.bind(this)}\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  value={this.state.activo}\r\n                  variant=\"outlined\"\r\n                  helperText={this.state.e_username?\"Estado del usuario no puede ser vacío\":\"\"}\r\n                  error={this.state.e_estado}\r\n                >\r\n                  {this.state.estados.map((option) => (\r\n                    <option\r\n                      key={option.value}\r\n                      value={option.value}\r\n                    >\r\n                      {option.label}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                md={3}\r\n                xs={12}\r\n              >\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Sexo\"\r\n                  name=\"sexo\"\r\n                  onChange={this.handleChange.bind(this)}\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  value={this.state.sexo}\r\n                  variant=\"outlined\"\r\n                  helperText={this.state.e_sexo?\"Seleccione el sexo del usuario, por favor\":\"\"}\r\n                  error={this.state.e_sexo}\r\n                >\r\n                  <option value={null} label='' />\r\n                  {this.state.sexos.map((option) => (\r\n                    <option\r\n                      key={option.value}\r\n                      value={option.value}\r\n                    >\r\n                      {option.label}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                md={3}\r\n                xs={12}\r\n              >\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  onChange={this.handleChangeMail.bind(this)}\r\n                  type=\"email\"\r\n                  value={this.state.email}\r\n                  variant=\"outlined\"\r\n                  error={this.state.e_mail}\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                md={3}\r\n                xs={12}\r\n              >\r\n                <InputMask mask=\"99999999-9\" value={this.state.dui} onChange={this.onChangeDui.bind(this)} onBlur={this.onChangeDui.bind(this)} >\r\n                  {(inputProps) => <TextField {...inputProps}\r\n                    fullWidth\r\n                    label=\"DUI\"\r\n                    name=\"dui\"\r\n                    value={this.state.dui}\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    helperText={this.state.e_dui?this.state.e_dui_msj:\"\"}\r\n                    error={this.state.e_dui}\r\n                  />}\r\n                </InputMask>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                md={3}\r\n                xs={12}\r\n              >\r\n                <InputMask mask=\"9999-999999-999-9\" value={this.state.nit} onChange={this.onChangeNit.bind(this)} onBlur={this.onChangeNit.bind(this)}>\r\n                  {(inputProps) => <TextField\r\n                    fullWidth\r\n                    label=\"NIT\"\r\n                    name=\"nit\"\r\n                    type=\"text\"\r\n                    value={this.state.nit}\r\n                    variant=\"outlined\"\r\n                    helperText={this.state.e_nit?this.state.e_nit_msj:\"\"}\r\n                    error={this.state.e_nit}\r\n                  />}\r\n                </InputMask>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                md={3}\r\n                xs={12}\r\n              >\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Celular\"\r\n                  name=\"celular\"\r\n                  onChange={this.handleChange.bind(this)}\r\n                  type=\"text\"\r\n                  value={this.state.celular}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                md={3}\r\n                xs={12}\r\n              >\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Telefono\"\r\n                  name=\"telefono\"\r\n                  onChange={this.handleChange.bind(this)}\r\n                  type=\"text\"\r\n                  value={this.state.telefono}\r\n                  variant=\"outlined\"\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                md={3}\r\n                xs={12}\r\n              >\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Rol\"\r\n                  name=\"id_rol\"\r\n                  onChange={this.handleChange.bind(this)}\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  value={this.state.id_rol}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {this.state.states.map((option) => (\r\n                    <option\r\n                      key={option.value}\r\n                      value={option.value}\r\n                    >\r\n                      {option.label}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                md={3}\r\n                xs={12}\r\n              >\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Sucursal\"\r\n                  name=\"id_sucursal\"\r\n                  onChange={this.handleChange.bind(this)}\r\n                  required\r\n                  select\r\n                  SelectProps={{ native: true }}\r\n                  value={this.state.id_sucursal}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {this.state.sucursales.map((option) => (\r\n                    <option\r\n                      key={option.value}\r\n                      value={option.value}\r\n                    >\r\n                      {option.label}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n\r\n            </Grid>\r\n          </CardContent>\r\n          <Divider />\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"left\"\r\n            p={2}\r\n          >\r\n            {(action!=='view')&&<Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n            >\r\n              Guardar\r\n            </Button>}\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{marginLeft:5}}\r\n              onClick={(e)=>{window.location=\"/turnos/app/users\"}}\r\n            >\r\n              Regresar\r\n            </Button>\r\n            <FormDialog  onClick={this.openModalAudit.bind(this)} open={this.state.openModalAudit} clave={\"usuario/\"+this.state.id_usuario} id={this.state.id_usuario} />\r\n          </Box>\r\n\r\n        </Card>\r\n      </form>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nProfileDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProfileDetails;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Profile from './Profile';\r\nimport ProfileDetails from './ProfileDetails';\r\nimport AuthenticationService from 'src/service/AuthenticationService';\r\nimport solReact from '../../../js/solReact';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Account = () => {\r\n  const action = solReact.getQueryVariable(\"action\");\r\n  const classes = useStyles();\r\n  const [userDetail, setUserDetail] = useState(null);\r\n\r\n  useEffect(() => {\r\n    function loadUserDetails() {\r\n      AuthenticationService.whoami()\r\n        .then(response => {\r\n          //console.log(response.data)\r\n          setUserDetail(response.data)\r\n        }).catch(err => {\r\n          console.error(err)\r\n        })\r\n    }\r\n    loadUserDetails();\r\n  }, []);\r\n\r\n  const user = {\r\n    avatar: '/static/images/avatars/default-avatar.png',\r\n    city: 'San Salvador',\r\n    country: 'El Salvador',\r\n    jobTitle: (userDetail != null) ? userDetail.username + ' (' + userDetail.idRol.nombre + ') ' : 'loading',\r\n    name: (userDetail != null) ? userDetail.primerNombre + \" \" + userDetail.primerApellido : 'loading',\r\n    timezone: 'GTM-7'\r\n  };\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Account\"\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={1}\r\n        >\r\n          {(action === 'view') && <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <Profile user={user} />\r\n          </Grid>}\r\n          {(action !== 'view') && <Grid\r\n            item\r\n            xl={12}\r\n            lg={12}\r\n            md={12}\r\n            xs={12}\r\n          >\r\n            <ProfileDetails />\r\n          </Grid>}\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Card,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Results = ({ className, data, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'Id', minWidth: 100},\r\n    { field: 'nombre', headerName: 'Nombre de estación', minWidth: 300,flex: 1 },\r\n    { field: 'activo', headerName: 'Estado', minWidth: 200,disableClickEventBubbling: true,\r\n      renderCell:(params)=>(\r\n        params.value?<span style={{color:'blue'}}>Activo</span>:<span style={{color:'red'}}>Inactivo</span>\r\n      ) },\r\n    { field: 'idSucursal', headerName: 'Sucursal', minWidth: 200 },\r\n    { field: 'fechaCreacion', headerName: 'Fecha creación', description: 'Fecha de creación',\r\n      sortable: false,\r\n      minWidth: 400,flex:0.5,\r\n      type: 'dateTime'\r\n    },\r\n    { field: 'button', headerName: 'Accion', minWidth: 200,disableClickEventBubbling: true,flex: 0.5,\r\n    renderCell: (params) => {\r\n      const onClick = () => {\r\n        console.log(params.value)\r\n        window.location = \"station?action=view&id=\"+params.value\r\n      };\r\n      const onEdit = () => {\r\n        console.log(params.value)\r\n        window.location = \"station?action=update&id=\"+params.value\r\n      };\r\n      return <>\r\n        <IconButton aria-label=\"Ver\" onClick={onClick}>\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n        <>\r\n          <IconButton aria-label=\"Ver\" onClick={onEdit}>\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton aria-label=\"Ver\" onClick={onEdit}>\r\n            <InfoIcon />\r\n          </IconButton>\r\n          </>\r\n      </>\r\n    }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid rows={data} columns={columns} pageSize={5}\r\n      filterModel={{\r\n        items: [\r\n          { columnField: 'nombre', operatorValue: 'contains', value: '' },\r\n        ],\r\n      }}/>\r\n    </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  data: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Results;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst onNew = ()=>{\r\n  window.location = \"station?action=new\"\r\n}\r\n\r\nconst Toolbar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={onNew}\r\n          style={{marginTop:10}}\r\n        >\r\n          Crear Estación\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Toolbar;\r\n","import AuthenticationService from '../../../service/AuthenticationService';\r\nimport axios from 'axios'\r\nconst API_URL = AuthenticationService.getApiUrl();\r\n\r\n\r\nclass stationService {\r\n\r\n    findAll() {\r\n        return axios.get(`${API_URL}/admin/station/`);\r\n    }\r\n\r\n    findById(id) {\r\n        return axios.get(`${API_URL}/admin/station/${id}`);\r\n    }\r\n\r\n    save(data){\r\n        return axios.post(`${API_URL}/admin/station/`,data);\r\n    }\r\n\r\n    update(id, data){\r\n        return axios.put(`${API_URL}/detalle/${id}`, data);\r\n    }\r\n\r\n    updateusuario(id, data){\r\n        return axios.put(`${API_URL}/admin/station/${id}`, data);\r\n    }\r\n\r\n    whoami(){\r\n        return axios.get(`${API_URL}/admin/station/whoami`);\r\n    }\r\n\r\n    findAllSites() {\r\n        return axios.get(`${API_URL}/admin/sucursal/all`);\r\n    }\r\n}\r\n\r\nexport const findByDui = async (dui) => {\r\n    try {\r\n        const data = await axios.get(`${API_URL}/admin/station/dui/${dui}`);\r\n        return data;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\nexport default new stationService();","import React, { Component } from 'react';\r\nimport {\r\n    Box,\r\n    Container,\r\n    makeStyles,\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Results from './Results';\r\nimport Toolbar from './Toolbar';\r\nimport stationService from './service/stationService';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.dark,\r\n        minHeight: '100%',\r\n        paddingBottom: theme.spacing(3),\r\n        paddingTop: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nexport default class Stations extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            dataFormated: [],\r\n            user: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAllStations()\r\n        \r\n    }\r\n\r\n    loadAllStations() {\r\n        stationService.findAll()\r\n            .then(response => {\r\n                //console.log(response.data)\r\n                this.setState({ data: response.data })\r\n                this.makeDataFormated(response.data)\r\n            }).catch(\r\n                err => {\r\n                    console.error(err)\r\n                }\r\n            )\r\n    }\r\n\r\n    makeDataFormated(objEncuesta) {\r\n        let objTemp = []\r\n        objEncuesta.map(\r\n            (a) => {\r\n                return objTemp.push(\r\n                    {\r\n                        nombre: a.nombre,\r\n                        descripcion: a.descripcion,\r\n                        fechaCreacion: moment(a.fechaCreacion).format('DD/MM/YYYY'),\r\n                        id: a.idEstacion,\r\n                        idSucursal:a.idSucursal.nombre,\r\n                        ocupado: a.ocupado,\r\n                        activo: Boolean(a.activo),\r\n                        button:a.idEstacion\r\n                    }\r\n                )\r\n            }\r\n        )\r\n        this.setState({ dataFormated: objTemp })\r\n        //console.log(objTemp)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Page\r\n                className={useStyles.root}\r\n                title=\"Lista de Estaciones de atención\"\r\n            >\r\n                <Container maxWidth={false}>\r\n                    <Toolbar/>\r\n                    <Box mt={3}>\r\n                        <Results data={this.state.dataFormated} />\r\n                    </Box>\r\n                </Container>\r\n            </Page>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport solReact from 'src/js/solReact';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Container,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Grid,\r\n    TextField,\r\n    makeStyles, FormControlLabel\r\n} from '@material-ui/core';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Page from 'src/components/Page';\r\nimport stationService from './service/stationService';\r\nimport FormDialog from '../../views/audit';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\nconst action = solReact.getQueryVariable(\"action\")\r\nclass StationView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: '',\r\n            nombre: '',\r\n            e_nombre: false,\r\n            descripcion: '',\r\n            activo: true,\r\n            sucursales: [\r\n                { value: 1, label: 'Central' }\r\n            ],\r\n            id_sucursal: 1,\r\n            ocupado: false,\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (action === 'view' || action === 'update') {\r\n            const idParam = solReact.getQueryVariable(\"id\")\r\n            this.loadStationById(idParam)\r\n            this.setState({ id: idParam })\r\n        }\r\n        this.loadAllSites()\r\n    }\r\n\r\n    loadAllSites() {\r\n        stationService.findAllSites()\r\n            .then(response => {\r\n                this.setState({sucursales:response.data})\r\n            }).catch(err => {\r\n                toast.error('Error al cargar sucursales')\r\n            })\r\n    }\r\n\r\n    loadStationById(id) {\r\n        stationService.findById(id)\r\n            .then(response => {\r\n                let a = response.data\r\n                this.setState({\r\n                    nombre: a.nombre,\r\n                    descripcion: a.descripcion,\r\n                    activo: a.activo,\r\n                    ocupado: a.ocupado,\r\n                    id_sucursal: a.idSucursal.idSucursal\r\n                })\r\n            }).catch(err => {\r\n                console.error(err)\r\n            })\r\n    }\r\n\r\n    useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            backgroundColor: theme.palette.background.dark,\r\n            minHeight: '90%',\r\n            paddingBottom: theme.spacing(3),\r\n            paddingTop: theme.spacing(3),\r\n            marginTop: theme.spacing(3)\r\n        }\r\n    }));\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    handleChangeChk(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.checked\r\n        });\r\n    };\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.setState({ isLoading: true })\r\n        if (this.state.nombre === '') {\r\n            toast.warn('Nombre de la estación es requerido')\r\n            this.setState({ e_nombre: true })\r\n            this.setState({ isLoading: false })\r\n        } else {\r\n            let obj = {\r\n                nombre: this.state.nombre,\r\n                descripcion: this.state.descripcion,\r\n                ocupado: this.state.ocupado,\r\n                idSucursal: { idSucursal: parseInt(this.state.id_sucursal) },\r\n                activo: this.state.activo,\r\n            }\r\n            if (action === 'update') {\r\n                const idP = solReact.getQueryVariable(\"id\")\r\n                obj.idEstacion = idP\r\n            }\r\n            this.save(obj)\r\n        }\r\n    }\r\n\r\n    save(obj) {\r\n        stationService.save(obj)\r\n            .then(response => {\r\n                toast.success('Guardado correctamente')\r\n                setTimeout(() => {\r\n                    window.location = '/turnos/app/stations'\r\n                }, 1000);\r\n            }).catch(err => {\r\n                console.error(err)\r\n                this.setState({ isLoading: false })\r\n            })\r\n    }\r\n\r\n    openModalAudit() {\r\n        this.setState({ openModalAudit: true })\r\n    }\r\n\r\n    render() {\r\n        const style = this.useStyles\r\n        return (\r\n            <Page\r\n                className={style.root}\r\n                title=\"Estación de atención\"\r\n            >\r\n                <Container maxWidth={false}>\r\n                    <Box mt={3}>\r\n                        <form\r\n                            autoComplete=\"off\"\r\n                            noValidate\r\n                            onSubmit={this.handleSubmit.bind(this)}\r\n                        >\r\n                            <Card>\r\n                                <CardHeader\r\n                                    subheader=\"Detalles de Estación de Atención\"\r\n                                    title=\"Estación\"\r\n                                />\r\n                                <Divider />\r\n                                <CardContent>\r\n                                    <Grid\r\n                                        container\r\n                                        spacing={3}\r\n                                    >\r\n                                        <Grid\r\n                                            item\r\n                                            md={3}\r\n                                            xs={12}\r\n                                        >\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                helperText={this.state.e_nombre ? \"Ingresa el nombre de la estación, por favor\" : \"\"}\r\n                                                label=\"Nombre\"\r\n                                                name=\"nombre\"\r\n                                                onChange={this.handleChange.bind(this)}\r\n                                                required\r\n                                                value={this.state.nombre}\r\n                                                variant=\"outlined\"\r\n                                                error={this.state.e_nombre}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            md={3}\r\n                                            xs={12}\r\n                                        >\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Descripción\"\r\n                                                name=\"descripcion\"\r\n                                                onChange={this.handleChange.bind(this)}\r\n                                                value={this.state.descripcion}\r\n                                                variant=\"outlined\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            md={3}\r\n                                            xs={12}\r\n                                        >\r\n                                            <FormControlLabel control={<Checkbox\r\n                                                checked={this.state.activo}\r\n                                                name=\"activo\"\r\n                                                onChange={this.handleChangeChk.bind(this)}\r\n                                                inputProps={{ 'aria-label': 'controlled' }}\r\n                                            />} label=\"Activo\" />\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            md={3}\r\n                                            xs={12}\r\n                                        >\r\n                                            <FormControlLabel control={<Checkbox\r\n                                                checked={this.state.ocupado}\r\n                                                name=\"ocupado\"\r\n                                                onChange={this.handleChangeChk.bind(this)}\r\n                                                inputProps={{ 'aria-label': 'controlled' }}\r\n                                            />} label=\"Ocupado\" />\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            md={3}\r\n                                            xs={12}\r\n                                        >\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Sucursal\"\r\n                                                name=\"id_sucursal\"\r\n                                                onChange={this.handleChange.bind(this)}\r\n                                                required\r\n                                                select\r\n                                                SelectProps={{ native: true }}\r\n                                                value={this.state.id_sucursal}\r\n                                                variant=\"outlined\"\r\n                                            >\r\n                                                {this.state.sucursales.map((option) => (\r\n                                                    <option\r\n                                                        key={option.idSucursal}\r\n                                                        value={option.idSucursal}\r\n                                                    >\r\n                                                        {option.nombre}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </TextField>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </CardContent>\r\n                                <Divider />\r\n                                {!this.state.isLoading ?\r\n                                    <Box\r\n                                        display=\"flex\"\r\n                                        justifyContent=\"left\"\r\n                                        p={2}\r\n                                    >\r\n                                        {(action !== 'view') && <Button\r\n                                            color=\"primary\"\r\n                                            variant=\"contained\"\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            Guardar\r\n                                        </Button>}\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            variant=\"contained\"\r\n                                            style={{ marginLeft: 5 }}\r\n                                            onClick={(e) => { window.location = \"/turnos/app/stations\" }}\r\n                                        >\r\n                                            Regresar\r\n                                        </Button>\r\n                                        <FormDialog onClick={this.openModalAudit.bind(this)} open={this.state.openModalAudit} clave={\"usuario/\" + this.state.id_usuario} id={this.state.id_usuario} />\r\n                                    </Box> : <LinearProgress />}\r\n                            </Card>\r\n                        </form>\r\n                    </Box>\r\n                </Container>\r\n            </Page>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StationView;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Card,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Results = ({ className, data, ...rest }) => {\r\n  const classes = useStyles();\r\n  const columns = [\r\n    { field: 'id', headerName: 'Id', minWidth: 100},\r\n    { field: 'nombre', headerName: 'Nombre de categoría', minWidth: 300,flex: 1 },\r\n    { field: 'activo', headerName: 'Estado', minWidth: 200,disableClickEventBubbling: true,\r\n      renderCell:(params)=>(\r\n        params.value?<span style={{color:'blue'}}>Activo</span>:<span style={{color:'red'}}>Inactivo</span>\r\n      ) },\r\n    { field: 'fechaCreacion', headerName: 'Fecha creación', description: 'Fecha de creación',\r\n      sortable: false,\r\n      minWidth: 400,flex:0.5,\r\n      type: 'dateTime'\r\n    },\r\n    { field: 'button', headerName: 'Accion', minWidth: 200,disableClickEventBubbling: true,flex: 0.5,\r\n    renderCell: (params) => {\r\n      const onClick = () => {\r\n        window.location = \"category?action=view&id=\"+params.value\r\n      };\r\n      const onEdit = () => {\r\n        window.location = \"category?action=update&id=\"+params.value\r\n      };\r\n      return <>\r\n        <IconButton aria-label=\"Ver\" onClick={onClick}>\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n        <>\r\n          <IconButton aria-label=\"Ver\" onClick={onEdit}>\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton aria-label=\"Ver\" onClick={onEdit}>\r\n            <InfoIcon />\r\n          </IconButton>\r\n          </>\r\n      </>\r\n    }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid rows={data} columns={columns} pageSize={5}\r\n      filterModel={{\r\n        items: [\r\n          { columnField: 'nombre', operatorValue: 'contains', value: '' },\r\n        ],\r\n      }}/>\r\n    </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  data: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Results;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst onNew = ()=>{\r\n  window.location = \"category?action=new\"\r\n}\r\n\r\nconst Toolbar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={onNew}\r\n          style={{marginTop:10}}\r\n        >\r\n          Crear Categoría\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Toolbar;\r\n","import AuthenticationService from '../../../service/AuthenticationService';\r\nimport axios from 'axios'\r\nconst API_URL = AuthenticationService.getApiUrl();\r\n\r\n\r\nclass stationService {\r\n\r\n    findAll() {\r\n        return axios.get(`${API_URL}/admin/categ/`);\r\n    }\r\n\r\n    findById(id) {\r\n        return axios.get(`${API_URL}/admin/categ/${id}`);\r\n    }\r\n\r\n    save(data){\r\n        return axios.post(`${API_URL}/admin/categ/`,data);\r\n    }\r\n\r\n    update(id, data){\r\n        return axios.put(`${API_URL}/detalle/${id}`, data);\r\n    }\r\n\r\n    updateusuario(id, data){\r\n        return axios.put(`${API_URL}/admin/categ/${id}`, data);\r\n    }\r\n\r\n    whoami(){\r\n        return axios.get(`${API_URL}/admin/categ/whoami`);\r\n    }\r\n\r\n    findAllStations() {\r\n        return axios.get(`${API_URL}/admin/station/`);\r\n    }\r\n\r\n    findAllSites() {\r\n        return axios.get(`${API_URL}/admin/sucursal/all`);\r\n    }\r\n\r\n    findStationBySite(id,idCateg){\r\n        return axios.get(`${API_URL}/admin/station/site/${id}/${idCateg}`);\r\n    }\r\n\r\n    findcategoriasPorEstacionesByIdCategoria(idCategoria){\r\n        return axios.get(`${API_URL}/admin/categ/categorias_estaciones/${idCategoria}`);\r\n    }\r\n\r\n    saveCategoriaEstacion(data){\r\n        return axios.post(`${API_URL}/admin/catest`,data);\r\n    }\r\n\r\n    delete(id){\r\n        return axios.delete(`${API_URL}/admin/catest/${id}`);\r\n    }\r\n}\r\n\r\nexport const findByDui = async (dui) => {\r\n    try {\r\n        const data = await axios.get(`${API_URL}/admin/categ/dui/${dui}`);\r\n        return data;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\nexport default new stationService();","import React, { Component } from 'react';\r\nimport {\r\n    Box,\r\n    Container,\r\n    makeStyles,\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Results from './Results';\r\nimport Toolbar from './Toolbar';\r\nimport categoryService from './service/categoryService';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.dark,\r\n        minHeight: '100%',\r\n        paddingBottom: theme.spacing(3),\r\n        paddingTop: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nexport default class Categories extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            dataFormated: [],\r\n            user: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAll()\r\n    }\r\n\r\n    loadAll() {\r\n        categoryService.findAll()\r\n            .then(response => {\r\n                this.setState({ data: response.data })\r\n                this.makeDataFormated(response.data)\r\n            }).catch(\r\n                err => {\r\n                    console.error(err)\r\n                }\r\n            )\r\n    }\r\n\r\n    makeDataFormated(obj) {\r\n        let objTemp = []\r\n        obj.map(\r\n            (a) => { return (\r\n                objTemp.push(\r\n                    {\r\n                        nombre: a.nombre,\r\n                        descripcion: a.descripcion,\r\n                        fechaCreacion: moment(a.fechaCreacion).format('DD/MM/YYYY HH:MM'),\r\n                        id: a.idCategoriaTurnos,\r\n                        ocupado: a.ocupado,\r\n                        activo: Boolean(a.activo),\r\n                        button:a.idCategoriaTurnos\r\n                    }\r\n                ) )\r\n            }\r\n        )\r\n        this.setState({ dataFormated: objTemp })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Page\r\n                className={useStyles.root}\r\n                title=\"Categorías de servicios\"\r\n            >\r\n                <Container maxWidth={false}>\r\n                    <Toolbar/>\r\n                    <Box mt={3}>\r\n                        <Results data={this.state.dataFormated} />\r\n                    </Box>\r\n                </Container>\r\n            </Page>\r\n        );\r\n    }\r\n}\r\n\r\n","import * as React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport categoryService from './service/categoryService';\r\nimport { toast } from 'react-toastify';\r\nimport { FormControl, FormHelperText, IconButton, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport solReact from 'src/js/solReact';\r\n\r\nconst id = solReact.getQueryVariable(\"id\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    iconButton: {\r\n        marginTop: theme.spacing(1)\r\n    }\r\n}));\r\nconst CategoryStation = ({ data }) => {\r\n    const [rows, setRows] = React.useState([]);\r\n    const [sucursales, setSucursales] = React.useState([]);\r\n    const [idSucursal, setIdSucursal] = React.useState('');\r\n    const [catStation, setCatStation] = React.useState([]);\r\n    const [idStation, setIdStation] = React.useState('');\r\n    const classes = useStyles();\r\n\r\n    React.useEffect(() => {\r\n        loadAllSites()\r\n        if (id !== null) {\r\n            loadStationsbyCategory(id)\r\n        }\r\n    }, [])\r\n\r\n    function loadStationsbyCategory(id) {\r\n        categoryService.findcategoriasPorEstacionesByIdCategoria(id)\r\n            .then(response => {\r\n                setCatStation(response.data)\r\n            })\r\n    }\r\n\r\n    function loadAllStationsBySite(idSite,idCateg) {\r\n        categoryService.findStationBySite(idSite,idCateg)\r\n            .then(response => {\r\n                setRows(response.data)\r\n\r\n            }).catch(err => {\r\n                toast.error('Error al cargar estaciones')\r\n            })\r\n    }\r\n\r\n    function loadAllSites() {\r\n        categoryService.findAllSites()\r\n            .then(response => {\r\n                setSucursales(response.data)\r\n                setIdSucursal(1)\r\n                loadAllStationsBySite(1,id)\r\n            }).catch(err => {\r\n                toast.error('Error al cargar sucursales')\r\n            })\r\n    }\r\n\r\n    function handleChange(e) {\r\n        //alert(e.target.value)\r\n        setIdStation(e.target.value)\r\n    }\r\n\r\n    function handleChangeSucursal(e, idData) {\r\n        let idPk = e.target.value\r\n        setIdSucursal(idPk)\r\n        if(idPk!==''){\r\n            loadAllStationsBySite(idPk,id)\r\n        }else{\r\n            setRows([])\r\n        }\r\n    }\r\n\r\n    function handdleAdd() {\r\n        let idEstacionPk = rows.find(e => e.idEstacion === idStation)\r\n        if (idEstacionPk !== null && idEstacionPk !== undefined) {\r\n            let idCategoria = data\r\n\r\n            let objData = {\r\n                idEstacion: idEstacionPk,\r\n                idCategoria: idCategoria\r\n            }\r\n            save(objData)\r\n        } else {\r\n            toast.warning('Seleccione una estación')\r\n        }\r\n    }\r\n\r\n    const save = (data) => {\r\n        categoryService.saveCategoriaEstacion(data)\r\n            .then(response => {\r\n                toast.success('Guardado correctamente')\r\n                loadAllStationsBySite(idSucursal,id)\r\n                setIdStation('')\r\n                loadStationsbyCategory(id)\r\n            }).catch(err => {\r\n                toast.error('Error al guardar')\r\n            })\r\n    }\r\n\r\n    const deleteCateg = (idPk) => {\r\n        categoryService.delete(idPk)\r\n            .then(response => {\r\n                toast.success('Eliminado con éxito')\r\n                loadStationsbyCategory(id)\r\n            }).catch(err => {\r\n                toast.error('Error al eliminar')\r\n            })\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"sucursal\">Sucursal</InputLabel>\r\n                <Select\r\n                    labelId=\"sucursal\"\r\n                    id=\"select-sucursal\"\r\n                    value={idSucursal}\r\n                    onChange={(e) => handleChangeSucursal(e, idSucursal)}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {sucursales.map(\r\n                        s => {\r\n                            return (\r\n                                <MenuItem key={s.idSucursal} value={s.idSucursal}>{s.nombre}</MenuItem>\r\n                            )\r\n                        }\r\n                    )}\r\n                </Select>\r\n                <FormHelperText>Seleccione la sucursal</FormHelperText>\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"estacion\">Estación</InputLabel>\r\n                <Select\r\n                    labelId=\"estacion\"\r\n                    id=\"select-estacion\"\r\n                    value={idStation}\r\n                    onChange={(e) => handleChange(e)}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {rows.map(\r\n                        s => {\r\n                            return (\r\n                                <MenuItem key={s.idEstacion} value={s.idEstacion}>{s.nombre}</MenuItem>\r\n                            )\r\n                        }\r\n                    )}\r\n                </Select>\r\n                <FormHelperText>Seleccione la estación</FormHelperText>\r\n            </FormControl>\r\n            <IconButton\r\n                className={classes.iconButton}\r\n                color=\"secondary\" aria-label=\"delete\"\r\n                onClick={handdleAdd}\r\n                disabled={rows.length == 0 || idStation == ''}>\r\n                <AddIcon />\r\n            </IconButton>\r\n            <Table size=\"small\" aria-label=\"a dense table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell width={'10%'}>ID</TableCell>\r\n                        <TableCell >Estación</TableCell>\r\n                        <TableCell >Sucursal</TableCell>\r\n                        <TableCell>Acción</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {catStation.map((row) => (\r\n                        <TableRow\r\n                            key={row.idCategoriaEstacion}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell>{row.idCategoriaEstacion}</TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {row.idEstacion.nombre}\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {row.idEstacion.idSucursal.nombre}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                <IconButton aria-label=\"delete\"\r\n                                    onClick={() => deleteCateg(row.idCategoriaEstacion)}>\r\n                                    <DeleteIcon style={{ color: '#e74c3c' }} />\r\n                                </IconButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nexport default CategoryStation; ","import React, { Component } from \"react\";\r\nimport solReact from 'src/js/solReact';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Container,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Grid,\r\n    TextField,\r\n    makeStyles, FormControlLabel,\r\n    Tooltip\r\n} from '@material-ui/core';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Page from 'src/components/Page';\r\nimport categoryService from './service/categoryService';\r\nimport FormDialog from '../../views/audit';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport InputMask from 'react-input-mask';\r\nimport CategoryStation from \"./categoryStation\";\r\n\r\nconst action = solReact.getQueryVariable(\"action\")\r\n\r\nexport default class Category extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            nombre: '',\r\n            descripcion: '',\r\n            activo: true,\r\n            prefijo: '',\r\n            prioridad: 1,\r\n            icono: '',\r\n            isLoading: false,\r\n            rangoPrioridad: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\r\n            estaciones: [],\r\n            estacionesSeleted: [],\r\n            categoriaUpdate:null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (action === 'view' || action === 'update') {\r\n            const idParam = solReact.getQueryVariable(\"id\")\r\n            this.loadById(idParam)\r\n            this.setState({ id: idParam })\r\n            this.loadCategoriasPorEstaciones(idParam)\r\n        }\r\n        this.loadAllStation()\r\n    }\r\n\r\n    handleChangeMulti = (value) => {\r\n        this.setState({ estacionesSeleted: value })\r\n    }\r\n\r\n    loadCategoriasPorEstaciones(idCategoria) {\r\n        categoryService.findcategoriasPorEstacionesByIdCategoria(idCategoria)\r\n            .then(response => {\r\n                let data = response.data\r\n                let dataFormated = []\r\n                data.map(e => {\r\n                    return (\r\n                        dataFormated.push(e.idEstacion.nombre)\r\n                    )\r\n                })\r\n                this.setState({ estacionesSeleted: dataFormated })\r\n            }).catch(err => {\r\n                toast.error('Error al cargar estaciones de atencion')\r\n            })\r\n    }\r\n\r\n    loadById(id) {\r\n        categoryService.findById(id)\r\n            .then(response => {\r\n                let a = response.data\r\n                this.setState({\r\n                    nombre: a.nombre,\r\n                    descripcion: a.descripcion != null ? a.descripcion : '',\r\n                    activo: a.activo,\r\n                    prefijo: a.prefijoTurno != null ? a.prefijoTurno : '',\r\n                    prioridad: a.prioridad,\r\n                    icono: a.iconoCategoria\r\n                })\r\n                this.setState({\r\n                    categoriaUpdate:a\r\n                })\r\n            }).catch(err => {\r\n                console.error(err)\r\n            })\r\n    }\r\n\r\n    loadAllStation() {\r\n        categoryService.findAllStations()\r\n            .then(response => {\r\n                this.setState({ estaciones: response.data })\r\n            }).catch(err => {\r\n                toast.error('Error al cargar estaciones de atención')\r\n            })\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    handleChangeChk(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.checked\r\n        });\r\n    };\r\n\r\n    openModalAudit() {\r\n        this.setState({ openModalAudit: true })\r\n    }\r\n\r\n    useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            backgroundColor: theme.palette.background.dark,\r\n            minHeight: '90%',\r\n            paddingBottom: theme.spacing(3),\r\n            paddingTop: theme.spacing(3),\r\n            marginTop: theme.spacing(3)\r\n        }\r\n    }));\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.setState({ isLoading: true })\r\n        if (this.state.nombre === '') {\r\n            toast.warn('Nombre de la categoría es requerido')\r\n            this.setState({ e_nombre: true })\r\n            this.setState({ isLoading: false })\r\n        } else if (this.state.prioridad === '') {\r\n            toast.warn('Prioridad es requerido')\r\n            this.setState({ e_prioridad: true })\r\n            this.setState({ isLoading: false })\r\n        } else {\r\n            let obj = {\r\n                nombre: this.state.nombre,\r\n                descripcion: this.state.descripcion,\r\n                prefijoTurno: this.state.prefijo,\r\n                prioridad: this.state.prioridad,\r\n                activo: this.state.activo,\r\n                iconoCategoria: this.state.icono\r\n            }\r\n            if (action === 'update') {\r\n                const idP = solReact.getQueryVariable(\"id\")\r\n                obj.idCategoriaTurnos = idP\r\n            }\r\n            this.save(obj)\r\n        }\r\n    }\r\n\r\n    save(obj) {\r\n        categoryService.save(obj)\r\n            .then(response => {\r\n                toast.success('Guardado correctamente')\r\n                setTimeout(() => {\r\n                    window.location = '/turnos/app/categories'\r\n                }, 1000);\r\n            }).catch(err => {\r\n                toast.error(err)\r\n                this.setState({ isLoading: false })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const style = this.useStyles\r\n        return (\r\n            <Page\r\n                className={style.root}\r\n                title=\"Categoría de turno\"\r\n            >\r\n                <Container maxWidth={false}>\r\n                    <Box mt={3}>\r\n                        <form\r\n                            autoComplete=\"off\"\r\n                            noValidate\r\n                            onSubmit={this.handleSubmit.bind(this)}\r\n                        >\r\n                            <Card>\r\n                                <CardHeader\r\n                                    subheader=\"Detalles de categoría de turno\"\r\n                                    title=\"Categoría de turno\"\r\n                                />\r\n                                <Divider />\r\n                                <CardContent>\r\n                                    <Grid\r\n                                        container\r\n                                        spacing={3}\r\n                                    >\r\n                                        <Grid\r\n                                            item\r\n                                            md={3}\r\n                                            xs={12}\r\n                                        >\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                helperText={this.state.e_nombre ? \"Ingresa el nombre de la categoría, por favor\" : \"\"}\r\n                                                label=\"Nombre\"\r\n                                                name=\"nombre\"\r\n                                                onChange={this.handleChange.bind(this)}\r\n                                                required\r\n                                                value={this.state.nombre}\r\n                                                variant=\"outlined\"\r\n                                                error={this.state.e_nombre}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            md={3}\r\n                                            xs={12}\r\n                                        >\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Descripción\"\r\n                                                name=\"descripcion\"\r\n                                                onChange={this.handleChange.bind(this)}\r\n                                                value={this.state.descripcion}\r\n                                                variant=\"outlined\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            md={3}\r\n                                            xs={12}\r\n                                        >\r\n                                            <FormControlLabel control={<Checkbox\r\n                                                checked={this.state.activo}\r\n                                                name=\"activo\"\r\n                                                onChange={this.handleChangeChk.bind(this)}\r\n                                                inputProps={{ 'aria-label': 'controlled' }}\r\n                                            />} label=\"Activo\" />\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            md={3}\r\n                                            xs={12}\r\n                                        >\r\n                                            <InputMask mask=\"aa\" value={this.state.prefijo.toUpperCase()} onChange={this.handleChange.bind(this)} onBlur={this.handleChange.bind(this)} >\r\n                                                {(inputProps) => <TextField {...inputProps}\r\n                                                    fullWidth\r\n                                                    label=\"Prefijo\"\r\n                                                    name=\"prefijo\"\r\n                                                    value={this.state.prefijo.toUpperCase()}\r\n                                                    type=\"text\"\r\n                                                    variant=\"outlined\"\r\n                                                    helperText={this.state.e_dui ? this.state.e_dui_msj : \"\"}\r\n                                                    error={this.state.e_dui}\r\n                                                />}\r\n                                            </InputMask>\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            md={3}\r\n                                            xs={12}\r\n                                        >\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Prioridad\"\r\n                                                name=\"prioridad\"\r\n                                                onChange={this.handleChange.bind(this)}\r\n                                                required\r\n                                                select\r\n                                                SelectProps={{ native: true }}\r\n                                                value={this.state.prioridad}\r\n                                                variant=\"outlined\"\r\n                                            >\r\n                                                {this.state.rangoPrioridad.map((option) => (\r\n                                                    <option\r\n                                                        key={option}\r\n                                                        value={option}\r\n                                                    >\r\n                                                        {option}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </TextField>\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            md={3}\r\n                                            xs={12}\r\n                                        ><Tooltip title={\"Nombre del ícono (Cualquiera de https://fonts.google.com/icons)\"}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    label=\"Ícono de categoría\"\r\n                                                    name=\"icono\"\r\n                                                    onChange={this.handleChange.bind(this)}\r\n                                                    value={this.state.icono}\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                            </Tooltip>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </CardContent>\r\n                                <Divider />\r\n                                {!this.state.isLoading ?\r\n                                    <Box\r\n                                        display=\"flex\"\r\n                                        justifyContent=\"left\"\r\n                                        p={2}\r\n                                    >\r\n                                        {(action !== 'view') && <Button\r\n                                            color=\"primary\"\r\n                                            variant=\"contained\"\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            Guardar\r\n                                        </Button>}\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            variant=\"contained\"\r\n                                            style={{ marginLeft: 5 }}\r\n                                            onClick={(e) => { window.location = \"/turnos/app/categories\" }}\r\n                                        >\r\n                                            Regresar\r\n                                        </Button>\r\n                                        <FormDialog onClick={this.openModalAudit.bind(this)} open={this.state.openModalAudit} clave={\"usuario/\" + this.state.id_usuario} id={this.state.id_usuario} />\r\n                                    </Box> : <LinearProgress />}\r\n                            </Card>\r\n                        </form>\r\n                    </Box>\r\n\r\n                    <Box mt={3}>\r\n                        <Card>\r\n                            <CardHeader\r\n                                title=\"Estaciones que pueden atender esta categoría\"\r\n                                subheader=\"Solo las estaciones permitidas en esta lista pueden atender esta categoría\"\r\n                            />\r\n                            <Divider />\r\n                            <CardContent>\r\n                                <Grid\r\n                                    container\r\n                                    spacing={3}\r\n                                >\r\n                                    <Grid\r\n                                        item\r\n                                        md={6}\r\n                                        xs={12}\r\n                                    >\r\n                                        <CategoryStation data={this.state.categoriaUpdate} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Box>\r\n                </Container>\r\n            </Page>\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Card,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Results = ({ className, data, ...rest }) => {\r\n  const classes = useStyles();\r\n  const columns = [\r\n    { field: 'id', headerName: 'Id', minWidth: 100},\r\n    { field: 'nombre', headerName: 'Nombre del servicio', minWidth: 300,flex: 1 },\r\n    { field: 'activo', headerName: 'Estado', minWidth: 200,disableClickEventBubbling: true,\r\n      renderCell:(params)=>(\r\n        params.value?<span style={{color:'blue'}}>Activo</span>:<span style={{color:'red'}}>Inactivo</span>\r\n      ) },\r\n    { field: 'fechaCreacion', headerName: 'Fecha creación', description: 'Fecha de creación',\r\n      sortable: false,\r\n      minWidth: 400,flex:0.5,\r\n      type: 'dateTime'\r\n    },\r\n    { field: 'button', headerName: 'Accion', minWidth: 200,disableClickEventBubbling: true,flex: 0.5,\r\n    renderCell: (params) => {\r\n      const onClick = () => {\r\n        window.location = \"servive?action=view&id=\"+params.value\r\n      };\r\n      const onEdit = () => {\r\n        window.location = \"service?action=update&id=\"+params.value\r\n      };\r\n      return <>\r\n        <IconButton aria-label=\"Ver\" onClick={onClick}>\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n        <>\r\n          <IconButton aria-label=\"Ver\" onClick={onEdit}>\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton aria-label=\"Ver\" onClick={onEdit}>\r\n            <InfoIcon />\r\n          </IconButton>\r\n          </>\r\n      </>\r\n    }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid rows={data} columns={columns} pageSize={5}\r\n      filterModel={{\r\n        items: [\r\n          { columnField: 'nombre', operatorValue: 'contains', value: '' },\r\n        ],\r\n      }}/>\r\n    </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  data: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Results;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst onNew = ()=>{\r\n  window.location = \"service?action=new\"\r\n}\r\n\r\nconst Toolbar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={onNew}\r\n          style={{marginTop:10}}\r\n        >\r\n          Crear Servicio\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Toolbar;\r\n","import AuthenticationService from '../../../service/AuthenticationService';\r\nimport axios from 'axios'\r\nconst API_URL = AuthenticationService.getApiUrl();\r\n\r\n\r\nclass stationService {\r\n\r\n    findAll() {\r\n        return axios.get(`${API_URL}/admin/service/`);\r\n    }\r\n\r\n    findById(id) {\r\n        return axios.get(`${API_URL}/admin/service/${id}`);\r\n    }\r\n\r\n    save(data){\r\n        return axios.post(`${API_URL}/admin/service/`,data);\r\n    }\r\n\r\n    update(id, data){\r\n        return axios.put(`${API_URL}/detalle/${id}`, data);\r\n    }\r\n\r\n    updateusuario(id, data){\r\n        return axios.put(`${API_URL}/admin/service/${id}`, data);\r\n    }\r\n\r\n    whoami(){\r\n        return axios.get(`${API_URL}/admin/service/whoami`);\r\n    }\r\n\r\n    findAllCateg() {\r\n        return axios.get(`${API_URL}/admin/categ/`);\r\n    }\r\n}\r\n\r\nexport const findByDui = async (dui) => {\r\n    try {\r\n        const data = await axios.get(`${API_URL}/admin/service/dui/${dui}`);\r\n        return data;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\nexport default new stationService();","import React, { Component } from 'react';\r\nimport {\r\n    Box,\r\n    Container,\r\n    makeStyles,\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Results from './Results';\r\nimport Toolbar from './Toolbar';\r\nimport servicesService from './service/servicesService';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.dark,\r\n        minHeight: '100%',\r\n        paddingBottom: theme.spacing(3),\r\n        paddingTop: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nexport default class Services extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            dataFormated: [],\r\n            user: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAll()\r\n    }\r\n\r\n    loadAll() {\r\n        servicesService.findAll()\r\n            .then(response => {\r\n                this.setState({ data: response.data })\r\n                this.makeDataFormated(response.data)\r\n            }).catch(\r\n                err => {\r\n                    console.error(err)\r\n                }\r\n            )\r\n    }\r\n\r\n    makeDataFormated(obj) {\r\n        let objTemp = []\r\n        obj.map(\r\n            (a) => {\r\n                return (\r\n                    objTemp.push(\r\n                        {\r\n                            nombre: a.nombreServicio,\r\n                            descripcion: a.descripcion,\r\n                            fechaCreacion: moment(a.fechaCreacion).format('DD/MM/YYYY HH:MM'),\r\n                            id: a.idServicioCategoria,\r\n                            ocupado: a.ocupado,\r\n                            activo: Boolean(a.activo),\r\n                            button: a.idServicioCategoria\r\n                        }\r\n                    )\r\n                )\r\n            }\r\n        )\r\n        this.setState({ dataFormated: objTemp })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Page\r\n                className={useStyles.root}\r\n                title=\"Servicios\"\r\n            >\r\n                <Container maxWidth={false}>\r\n                    <Toolbar/>\r\n                    <Box mt={3}>\r\n                        <Results data={this.state.dataFormated} />\r\n                    </Box>\r\n                </Container>\r\n            </Page>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport solReact from 'src/js/solReact';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Container,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Grid,\r\n    TextField,\r\n    makeStyles, FormControlLabel,\r\n    Tooltip\r\n} from '@material-ui/core';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Page from 'src/components/Page';\r\nimport servicesService from './service/servicesService';\r\nimport FormDialog from '../../views/audit';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\nconst action = solReact.getQueryVariable(\"action\")\r\n\r\nexport default class Category extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            nombre: '',\r\n            descripcion: '',\r\n            activo: true,\r\n            prefijo:'',\r\n            prioridad:1,\r\n            icono:'',\r\n            isLoading:false,\r\n            rangoPrioridad: [1,2,3,4,5,6,7,8,9,10],\r\n            category:1,\r\n            categories:[],\r\n            e_category:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAllCategories()\r\n        if (action === 'view' || action === 'update') {\r\n            const idParam = solReact.getQueryVariable(\"id\")\r\n            this.loadStationById(idParam)\r\n            this.setState({ id: idParam })\r\n        }\r\n\r\n    }\r\n\r\n    loadStationById(id) {\r\n        servicesService.findById(id)\r\n            .then(response => {\r\n                let a = response.data\r\n                this.setState({\r\n                    nombre: a.nombreServicio,\r\n                    descripcion: a.descripcion!=null?a.descripcion:'',\r\n                    activo: a.activo,\r\n                    prioridad:a.prioridad,\r\n                    icono:a.iconoServicio!=null?a.iconoServicio:'',\r\n                    category:parseInt(a.idCategoriaTurno.idCategoriaTurnos)\r\n                })\r\n            }).catch(err => {\r\n                console.error(err)\r\n            })\r\n    }\r\n\r\n    loadAllCategories(){\r\n        servicesService.findAllCateg()\r\n        .then(\r\n            response=>{\r\n                this.setState({categories:response.data,category:1})\r\n            }\r\n        ).catch(err=>{\r\n            toast.error('err')\r\n        })\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    handleChangeChk(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.checked\r\n        });\r\n    };\r\n\r\n    openModalAudit() {\r\n        this.setState({ openModalAudit: true })\r\n    }\r\n\r\n    useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            backgroundColor: theme.palette.background.dark,\r\n            minHeight: '90%',\r\n            paddingBottom: theme.spacing(3),\r\n            paddingTop: theme.spacing(3),\r\n            marginTop: theme.spacing(3)\r\n        }\r\n    }));\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.setState({ isLoading: true })\r\n        if (this.state.nombre === '') {\r\n            toast.warn('Nombre del servicio es requerido')\r\n            this.setState({ e_nombre: true })\r\n            this.setState({ isLoading: false })\r\n        }else if(this.state.prioridad===''){\r\n            toast.warn('Prioridad es requerido')\r\n            this.setState({e_prioridad:true})\r\n            this.setState({ isLoading: false })\r\n        } else if(this.state.category===''){\r\n            toast.warn('Categoría es requerido')\r\n            this.setState({e_category:true})\r\n            this.setState({ isLoading: false })\r\n        }else {\r\n            let obj = {\r\n                nombreServicio: this.state.nombre,\r\n                descripcion: this.state.descripcion,\r\n                prioridad: this.state.prioridad,\r\n                activo: this.state.activo,\r\n                iconoServicio: this.state.icono,\r\n                idCategoriaTurno:{idCategoriaTurnos:parseInt(this.state.category)}\r\n            }\r\n            if (action === 'update') {\r\n                const idP = solReact.getQueryVariable(\"id\")\r\n                obj.idServicioCategoria = idP\r\n            }\r\n            this.save(obj)\r\n        }\r\n    }\r\n\r\n    save(obj) {\r\n        servicesService.save(obj)\r\n            .then(response => {\r\n                toast.success('Guardado correctamente')\r\n                setTimeout(() => {\r\n                    window.location = '/turnos/app/services'\r\n                }, 1000);\r\n            }).catch(err => {\r\n                toast.error('Error ocurrido')\r\n                this.setState({ isLoading: false })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const style = this.useStyles\r\n        return (\r\n            <Page\r\n                className={style.root}\r\n                title=\"Servicio\"\r\n            >\r\n                <Container maxWidth={false}>\r\n                    <Box mt={3}>\r\n                        <form\r\n                            autoComplete=\"off\"\r\n                            noValidate\r\n                            onSubmit={this.handleSubmit.bind(this)}\r\n                        >\r\n                            <Card>\r\n                                <CardHeader\r\n                                    subheader=\"Detalles de servicio\"\r\n                                    title=\"Servicio de turno\"\r\n                                />\r\n                                <Divider />\r\n                                <CardContent>\r\n                                    <Grid\r\n                                        container\r\n                                        spacing={3}\r\n                                    >\r\n                                        <Grid\r\n                                            item\r\n                                            md={3}\r\n                                            xs={12}\r\n                                        >\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                helperText={this.state.e_nombre ? \"Ingresa el nombre de la categoría, por favor\" : \"\"}\r\n                                                label=\"Nombre\"\r\n                                                name=\"nombre\"\r\n                                                onChange={this.handleChange.bind(this)}\r\n                                                required\r\n                                                value={this.state.nombre}\r\n                                                variant=\"outlined\"\r\n                                                error={this.state.e_nombre}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            md={3}\r\n                                            xs={12}\r\n                                        >\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Descripción\"\r\n                                                name=\"descripcion\"\r\n                                                onChange={this.handleChange.bind(this)}\r\n                                                value={this.state.descripcion}\r\n                                                variant=\"outlined\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            md={3}\r\n                                            xs={12}\r\n                                        >\r\n                                            <FormControlLabel control={<Checkbox\r\n                                                checked={this.state.activo}\r\n                                                name=\"activo\"\r\n                                                onChange={this.handleChangeChk.bind(this)}\r\n                                                inputProps={{ 'aria-label': 'controlled' }}\r\n                                            />} label=\"Activo\" />\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            md={3}\r\n                                            xs={12}\r\n                                        >\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Categoría de turno\"\r\n                                                name=\"category\"\r\n                                                onChange={this.handleChange.bind(this)}\r\n                                                required\r\n                                                select\r\n                                                SelectProps={{ native: true}}\r\n                                                value={parseInt(this.state.category)}\r\n                                                variant=\"outlined\"\r\n                                                error={this.state.e_category}\r\n                                            >\r\n                                                {this.state.categories.map((option) => (\r\n                                                    <option\r\n                                                        key={option.idCategoriaTurnos}\r\n                                                        value={parseInt(option.idCategoriaTurnos)}\r\n                                                    >\r\n                                                        {option.nombre}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </TextField>\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            md={3}\r\n                                            xs={12}\r\n                                        >\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                label=\"Prioridad\"\r\n                                                name=\"prioridad\"\r\n                                                onChange={this.handleChange.bind(this)}\r\n                                                required\r\n                                                select\r\n                                                SelectProps={{ native: true }}\r\n                                                value={this.state.prioridad}\r\n                                                variant=\"outlined\"\r\n                                            >\r\n                                                {this.state.rangoPrioridad.map((option) => (\r\n                                                    <option\r\n                                                        key={option}\r\n                                                        value={option}\r\n                                                    >\r\n                                                        {option}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </TextField>\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            md={3}\r\n                                            xs={12}\r\n                                        ><Tooltip title={\"Nombre del ícono (Cualquiera de https://fonts.google.com/icons)\"}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    label=\"Ícono del servicio\"\r\n                                                    name=\"icono\"\r\n                                                    onChange={this.handleChange.bind(this)}\r\n                                                    value={this.state.icono}\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                            </Tooltip>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </CardContent>\r\n                                <Divider />\r\n                                {!this.state.isLoading ?\r\n                                    <Box\r\n                                        display=\"flex\"\r\n                                        justifyContent=\"left\"\r\n                                        p={2}\r\n                                    >\r\n                                        {(action !== 'view') && <Button\r\n                                            color=\"primary\"\r\n                                            variant=\"contained\"\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            Guardar\r\n                                        </Button>}\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            variant=\"contained\"\r\n                                            style={{ marginLeft: 5 }}\r\n                                            onClick={(e) => { window.location = \"/turnos/app/services\" }}\r\n                                        >\r\n                                            Regresar\r\n                                        </Button>\r\n                                        <FormDialog onClick={this.openModalAudit.bind(this)} open={this.state.openModalAudit} clave={\"usuario/\" + this.state.id_usuario} id={this.state.id_usuario} />\r\n                                    </Box> : <LinearProgress />}\r\n                            </Card>\r\n                        </form>\r\n                    </Box>\r\n                </Container>\r\n            </Page>\r\n\r\n        )\r\n    }\r\n}","import AuthenticationService from '../../../service/AuthenticationService';\r\nimport axios from 'axios'\r\nconst API_URL = AuthenticationService.getApiUrl();\r\n\r\n\r\nclass KioskoService {\r\n\r\n    findAllCategories() {\r\n        return axios.get(`${API_URL}/kiosko/categories`);\r\n    }\r\n\r\n    findByIdCategories(id) {\r\n        return axios.get(`${API_URL}/kiosko/servicioscateg?id=${id}`);\r\n    }\r\n\r\n    save(data) {\r\n        return axios.post(`${API_URL}/kiosko/turno`,data);\r\n    }\r\n}\r\n\r\nexport const findAllr = async () => {\r\n    try {\r\n        const data = await axios.get(`${API_URL}/kisko/`);\r\n        return data.data;\r\n        //return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\nexport default new KioskoService();","import * as React from \"react\";\r\nimport {\r\n    Typography,\r\n} from '@material-ui/core';\r\nexport class ComponentToPrint extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { checked: false };\r\n    }\r\n    canvasEl;\r\n    componentDidMount() {\r\n\r\n    }\r\n    setRef = (ref) => (this.canvasEl = ref);\r\n\r\n    render() {\r\n        let {data} = this.props;\r\n        return (\r\n            <div className=\"relativeCSS\" style={{width:290, textAlign:'center'}}>\r\n                <style type=\"text/css\" media=\"print\">\r\n                    {\" @page { size: 80mm } \"}\r\n                </style>\r\n                <img src={process.env.PUBLIC_URL + '/static/logo.png'} alt='logo' />\r\n\r\n                <Typography sx={{ ml: 2, flex: 1 }} variant=\"h4\" component=\"div\">\r\n                    Bienvenido a: \"Tu empresa\"\r\n                </Typography>\r\n                <Typography sx={{ ml: 2, flex: 1 }} variant=\"h1\" component=\"div\">\r\n                    {data.noConsecutivo}\r\n                </Typography>\r\n                <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n                    {data.fechaCreacion}\r\n                </Typography>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const FunctionalComponentToPrint = React.forwardRef((props, ref) => {\r\n    return <ComponentToPrint ref={ref} text={props.text} />;\r\n});\r\n","import React, { Component } from \"react\";\r\nimport {\r\n    Box,\r\n    Container,\r\n    Typography,\r\n    makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport kioskoService from \"./service/kioskoService\";\r\nimport { toast } from \"react-toastify\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Icon from '@mui/material/Icon';\r\nimport { CardActionArea } from '@mui/material';\r\nimport Grid from '@mui/material/Grid';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport { ComponentToPrint } from \"./genericTicket\";\r\nimport ReactToPrint from 'react-to-print';\r\nclass KioskoView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoading: false,\r\n            arrayCategories: [],\r\n            open:false,\r\n            arrayServices:[],\r\n            turnoSeleted:{}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllCategories()\r\n    }\r\n\r\n    getAllCategories() {\r\n        kioskoService.findAllCategories()\r\n            .then(response => {\r\n                this.setState({ arrayCategories: response.data })\r\n            }).catch(err => {\r\n                toast.error('error al cargar categorìas')\r\n            })\r\n    }\r\n\r\n    useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            backgroundColor: theme.palette.background.dark,\r\n            height: '100%',\r\n            paddingBottom: theme.spacing(3),\r\n            paddingTop: theme.spacing(3)\r\n        }\r\n    }));\r\n\r\n    renderCategories() {\r\n        return (\r\n            this.state.arrayCategories.map(\r\n                c => {\r\n                    return (\r\n                        <Grid key={c.idCategoriaTurnos} item xs={6} md={4}>\r\n                            <Card sx={{ minWidth: 50 }}\r\n                                onClickCapture={(e) => this.onClickCategory(e, c.idCategoriaTurnos)}>\r\n                                <CardActionArea>\r\n                                    <CardContent style={{textAlign:'center'}}>\r\n                                        {(c.iconoCategoria !== null && c.iconoCategoria !== '') && <Icon>{c.iconoCategoria}</Icon>}\r\n                                        <Typography sx={{ fontSize: 14 }} color=\"textPrimary\" gutterBottom>\r\n                                            {c.nombre}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    )\r\n                }\r\n            )\r\n        )\r\n    }\r\n\r\n    onClickCategory(e,id) {\r\n        this.renderServices(id)\r\n    }\r\n\r\n    renderServices(id){\r\n        this.loadServicesByIdCategory(id)\r\n    }\r\n\r\n    handleClose(){\r\n        this.setState({open:false})\r\n    }\r\n\r\n    loadServicesByIdCategory(id){\r\n        kioskoService.findByIdCategories(id)\r\n        .then(response=>{\r\n            if(response.data.length===0){\r\n                this.save(id,null)\r\n            }else{\r\n                this.setState({arrayServices:response.data})\r\n                this.setState({open:true})\r\n            }\r\n        }).catch(err=>{\r\n                console.error(err)\r\n        })\r\n    }\r\n\r\n    renderServicesById() {\r\n        return (\r\n            this.state.arrayServices.map(\r\n                s => {\r\n                    return (\r\n                        <React.Fragment key={s.idServicioCategoria}>\r\n                            <ListItem onClickCapture={(e) => this.save(s.idCategoriaTurno.idCategoriaTurnos, s.idServicioCategoria)}\r\n                            key={s.idServicioCategoria} button>\r\n                                <ListItemButton>\r\n                                    {(s.iconoServicio !== null && s.iconoServicio !== '') &&\r\n                                        <ListItemIcon>\r\n                                            <Icon>{s.iconoServicio}</Icon>\r\n                                        </ListItemIcon>}\r\n                                    <ListItemText primary={s.nombreServicio} secondary={s.descripcion} />\r\n                                </ListItemButton>\r\n                            </ListItem>\r\n                            <Divider />\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n            )\r\n        )\r\n    }\r\n\r\n    save(idCateg,idServicio){\r\n        let data = {\r\n            idCategoriaTurnos : {idCategoriaTurnos:idCateg},\r\n            controlTurnoDetalleSet:[{}]\r\n        }\r\n        if(idServicio!==null){\r\n            data.idServiciosCategoria = {idServicioCategoria:idServicio}\r\n        }\r\n        kioskoService.save(data)\r\n        .then(response=>{\r\n            toast.success('Bienvenido: Tome su ticket, por favor')\r\n            this.setState({turnoSeleted:response.data,open:false})\r\n            document.getElementById(\"btnImprimir\").click()\r\n        }).catch(err=>{\r\n            toast.error('Error al generar su turno')\r\n        })\r\n\r\n    }\r\n\r\n    renderTicket(){\r\n        return(ComponentToPrint)\r\n    }\r\n\r\n    setComponentRef = (ref) => {\r\n        this.componentRef = ref;\r\n    };\r\n\r\n    reactToPrintContent = () => {\r\n        return this.componentRef;\r\n    };\r\n\r\n    reactToPrintTrigger = () => {\r\n        // Good\r\n        return <button id=\"btnImprimir\" style={{ display: 'none' }}>Print pure text using a Class Component</button>;\r\n    };\r\n    render() {\r\n        const classes = this.useStyles;\r\n        return (\r\n            <Page\r\n                className={classes.root}\r\n                title=\"Kiosko QueueApp\"\r\n            >\r\n                <Box\r\n                    display=\"flex\"\r\n                    flexDirection=\"column\"\r\n                    height=\"100%\"\r\n                    justifyContent=\"center\"\r\n                    marginTop='15px'\r\n                >\r\n                    <Container maxWidth=\"md\">\r\n                    <Grid container spacing={2}>\r\n                        {this.renderCategories()}\r\n                    </Grid>\r\n                    </Container>\r\n                </Box>\r\n                <Dialog\r\n                    fullScreen\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose.bind(this)}\r\n                >\r\n                <AppBar sx={{ position: 'relative' }}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    onClick={this.handleClose.bind(this)}\r\n                    aria-label=\"close\"\r\n                    >\r\n                    <CloseIcon />\r\n                    </IconButton>\r\n                    <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n                        Seleccione el servicio a solicitar\r\n                    </Typography>\r\n                </Toolbar>\r\n                </AppBar>\r\n                <List style={{marginTop:10}}>\r\n                    {this.renderServicesById()}\r\n                </List>\r\n                </Dialog>\r\n                <ReactToPrint\r\n                    content={this.reactToPrintContent}\r\n                    documentTitle=\"AwesomeFileName\"\r\n                    removeAfterPrint\r\n                    trigger={this.reactToPrintTrigger}\r\n                />\r\n                <div style={{ display: \"none\" }}>\r\n                <ComponentToPrint ref={this.setComponentRef} data={this.state.turnoSeleted} />\r\n                </div>\r\n            </Page>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default KioskoView;","import AuthenticationService from '../../../service/AuthenticationService';\r\nimport axios from 'axios'\r\nconst API_URL = AuthenticationService.getApiUrl();\r\n\r\n\r\nclass AtencionService {\r\n\r\n    findAllEstacionesDisponibles() {\r\n        return axios.get(`${API_URL}/atencion/estacion`);\r\n    }\r\n\r\n    findByIdCategories(id) {\r\n        return axios.get(`${API_URL}/atencion/servicioscateg?id=${id}`);\r\n    }\r\n\r\n    findNextTurn() {\r\n        return axios.get(`${API_URL}/atencion/next`);\r\n    }\r\n\r\n    findAllActiveStates(){\r\n        return axios.get(`${API_URL}/atencion/states`);\r\n    }\r\n\r\n    updateTurn(id,data){\r\n        return axios.put(`${API_URL}/turno/${id}`,data);\r\n    }\r\n\r\n    completeTurn(id){\r\n        return axios.post(`${API_URL}/turno/complete/${id}`);\r\n    }\r\n\r\n    increaseCalled(id){\r\n        return axios.post(`${API_URL}/turno/called/${id}`);\r\n    }\r\n\r\n    findTurnInProgress(){\r\n        return axios.get(`${API_URL}/turno/inprogress`);\r\n    }\r\n\r\n    save(data) {\r\n        return axios.post(`${API_URL}/atencion/estacion/usuario`,data);\r\n    }\r\n\r\n    vacateStation(){\r\n        return axios.post(`${API_URL}/atencion/station/vacate`);\r\n    }\r\n\r\n    findOccupiedStation(){\r\n        return axios.get(`${API_URL}/atencion/station/occupied`);\r\n    }\r\n}\r\n\r\nexport const findAllr = async () => {\r\n    try {\r\n        const data = await axios.get(`${API_URL}/kisko/`);\r\n        return data.data;\r\n        //return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\nexport default new AtencionService();","import React, { Component } from \"react\";\r\nimport {\r\n    Button,\r\n    Container,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport Grid from '@mui/material/Grid';\r\nimport atencionService from \"./service/atencionService\";\r\nimport { toast } from \"react-toastify\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { CardActionArea } from '@mui/material';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Context from 'src/Context';\r\n\r\nexport default class EstacionAtencion extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            arrayEstaciones: [],\r\n            open: false,\r\n            isLoading: false,\r\n            estacionSelected: {},\r\n            isStationSelected: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadEstacionesDisponibles()\r\n        this.loadSelectStationFromApi()\r\n    }\r\n\r\n    loadSelectStationFromApi(){\r\n        atencionService.findOccupiedStation()\r\n        .then(response=>{\r\n            console.log(response.data)\r\n            this.setState({estacionSelected:response.data})\r\n            this.setStationContext(response.data)\r\n        }).catch(err=>{\r\n\r\n        })\r\n    }\r\n\r\n    loadEstacionesDisponibles() {\r\n        atencionService.findAllEstacionesDisponibles()\r\n            .then(response => {\r\n                this.setState({ arrayEstaciones: response.data })\r\n            }).catch(err => {\r\n                toast.error('Error al cargar estaciones disponibles')\r\n            })\r\n    }\r\n\r\n    renderEstaciones() {\r\n        return (\r\n            this.state.arrayEstaciones.map(\r\n                c => {\r\n                    return (\r\n                        <Grid key={c.idEstacion} item xs={6} md={6}>\r\n                            <Card sx={{ minWidth: 50 }}\r\n                                onClickCapture={(e) => this.onClickEstacion(e, c)}>\r\n                                <CardActionArea>\r\n                                    <CardContent style={{ textAlign: 'center' }}>\r\n                                        <Typography sx={{ fontSize: 14 }} color=\"textPrimary\" gutterBottom>\r\n                                            {c.nombre}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    )\r\n                }\r\n            )\r\n        )\r\n    }\r\n\r\n    onClickEstacion(e, data) {\r\n        this.setState({\r\n            open: true,\r\n            estacionSelected: data\r\n        })\r\n    }\r\n\r\n    handleCancel() {\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    handleOk(data) {\r\n        atencionService.save(this.state.estacionSelected)\r\n            .then(response => {\r\n                toast.success('Estación actualizada correctamente.')\r\n                this.setState({ open: false })\r\n                //console.log(response.data)\r\n                this.setStationContext(response.data)\r\n            }).catch(err => {\r\n                //console.error()\r\n                if(err.response.data.status && err.response.data.status===423){\r\n                    toast.warning(err.response.data.message)\r\n                }else{\r\n                    toast.error('Error al actualizar estación!')\r\n                }\r\n            })\r\n    }\r\n\r\n    setStationContext(data) {\r\n        //console.log('data ' + data)\r\n        this.setState({ isStationSelected: data })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"xl\">\r\n                <Typography variant=\"h2\" gutterBottom component=\"div\" mb={10}>\r\n                    Seleccione la estación que atenderá\r\n                </Typography>\r\n                <Grid container spacing={2}>\r\n                    {this.renderEstaciones()}\r\n                </Grid>\r\n                <Dialog\r\n                    sx={{ '& .MuiDialog-paper': { width: '80%', maxHeight: 435 } }}\r\n                    maxWidth=\"xs\"\r\n                    open={this.state.open}\r\n                >\r\n                    <DialogTitle>Confirme que va a ocupar {this.state.estacionSelected.nombre}</DialogTitle>\r\n                    <DialogContent dividers>\r\n                        <Typography variant=\"body1\" gutterBottom>\r\n                            Al seleccionar esta estación, nadie más podrá ocuparla, y estará ligada a esta sesión de usuario.\r\n                        </Typography>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button autoFocus onClick={this.handleCancel.bind(this)}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.handleOk.bind(this)}>Ok</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                {this.state.isStationSelected && <Context.Consumer>\r\n                    {({ selectStationToAttend }) => {\r\n                        return (\r\n                            selectStationToAttend(this.state.estacionSelected)\r\n                        )\r\n                    }}\r\n                </Context.Consumer>}\r\n            </Container>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  makeStyles,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Toolbar = ({ className,title ,vacateStation,...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  const onNewEncuesta = ()=>{\r\n    vacateStation()\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-left\"\r\n      >\r\n        <Typography className={classes.title} pt={10} variant=\"h1\" gutterBottom component=\"div\">\r\n            {title}\r\n        </Typography>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={onNewEncuesta}\r\n          style={{marginTop:10}}\r\n        >\r\n          Dejar de atender Estación\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Toolbar;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n    Button,\r\n    Container,\r\n    Typography,\r\n    Grid,\r\n    Box,\r\n    ButtonGroup,\r\n    BottomNavigation,\r\n    BottomNavigationAction,\r\n    Dialog,DialogTitle,DialogContent,DialogActions,\r\n    Badge,\r\n    LinearProgress\r\n} from '@material-ui/core';\r\nimport Toolbar from './Toolbar'\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport Check from '@material-ui/icons/Check';\r\nimport VolumeUp from '@material-ui/icons/VolumeUp';\r\nimport atencionService from \"./service/atencionService\";\r\nimport { toast } from \"react-toastify\";\r\nimport SockJsClient from 'react-stomp';\r\n\r\nconst SOCKET_URL = 'http://74.208.187.67:8080/Turnos/test-socket';\r\nexport default class AtencionTurno extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoading: false,\r\n            estacion: this.props.estacion,\r\n            turnSelected:null,\r\n            arrayStates:[],\r\n            SelectedState:1,\r\n            open:false,\r\n            turnDetailSelected:null,\r\n            called:0,\r\n            destroyStationContext:this.props.destroyStationAttended\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadAllActiveStates()\r\n        this.loadTurnInProgress()\r\n        this.loadSelectStationFromApi()\r\n    }\r\n\r\n    loadTurnInProgress(){\r\n        atencionService.findTurnInProgress()\r\n        .then(response=>{\r\n            this.setState({\r\n                turnSelected:response.data,\r\n                turnDetailSelected:response.data.controlTurnoDetalleSet[0],\r\n                called:response.data.controlTurnoDetalleSet[0].noSolicitudes\r\n            })\r\n        }).catch(err=>{\r\n            //console.log('Ningun')\r\n        })\r\n    }\r\n\r\n    onClickNext(){\r\n        if(this.state.turnSelected!==null){\r\n            this.loadTurnInProgress()\r\n            toast.warn('Finalice el turno en atención antes de llamar el próximo turno')\r\n        }else{\r\n            atencionService.findNextTurn()\r\n            .then(response=>{\r\n                this.setState({\r\n                    turnSelected:response.data,\r\n                    turnDetailSelected:response.data.controlTurnoDetalleSet[0],\r\n                    called:response.data.controlTurnoDetalleSet[0].noSolicitudes\r\n                })\r\n                this.sendMessage({\r\n                    consecutivo:response.data.noConsecutivo,\r\n                    estacion:JSON.parse(this.state.estacion).nombre\r\n                })\r\n            }).catch(err=>{\r\n                if(err.response.data.status && err.response.data.status===404){\r\n                    toast.warning(err.response.data.message)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    loadAllActiveStates(){\r\n        atencionService.findAllActiveStates()\r\n        .then(response=>{\r\n            this.setState({arrayStates:response.data})\r\n        }).catch(err=>{\r\n            toast.error('Error al cargar los estados del turno')\r\n        })\r\n    }\r\n\r\n    renderStates(data){\r\n        return this.state.arrayStates.map(e=>{\r\n            return(\r\n                <BottomNavigationAction key={e.idEstado} value={e.idEstado} label={e.nombre} component={Button}></BottomNavigationAction>\r\n            )\r\n        })\r\n    }\r\n\r\n    updateState(idState){\r\n        this.setLoading(true)\r\n        let copyTurn = this.state.turnSelected;\r\n        copyTurn.idEstado={idEstado:idState}\r\n        this.setState({turnSelected:copyTurn})\r\n        this.updateTurn(copyTurn.idControlTurno,copyTurn)\r\n    }\r\n\r\n    updateTurn(id,data){\r\n        atencionService.updateTurn(id,data)\r\n        .then(response=>{\r\n            toast.success('Estado del turno '+this.state.turnSelected.noConsecutivo+' actualizado correctamente')\r\n            this.setLoading(false)\r\n        }).catch(err=>{\r\n            toast.error('Error')\r\n            this.setLoading(false)\r\n        })\r\n    }\r\n\r\n    onHandleFinalize(){\r\n        this.setState({open:true})\r\n    }\r\n\r\n    handleCancel(e){\r\n        this.setState({open:false})\r\n    }\r\n\r\n    handleOk(e){\r\n        this.setLoading(true)\r\n        this.completeTurn(this.state.turnSelected.idControlTurno);\r\n    }\r\n\r\n    completeTurn(id){\r\n        atencionService.completeTurn(id)\r\n        .then(response=>{\r\n            this.setLoading(false)\r\n            this.handleCancel()\r\n            this.setState({turnSelected:null})\r\n            this.clientRef.sendMessage('/app/hello', JSON.stringify(response.data));\r\n            toast.success('Turno finalizado con éxito')\r\n        }).catch(err=>{\r\n            toast.error('Error')\r\n            this.setLoading(false)\r\n        })\r\n    }\r\n\r\n    setLoading(loading){\r\n        this.setState({isLoading:loading})\r\n    }\r\n\r\n    increaseCalled(){\r\n        this.setLoading(true)\r\n        atencionService.increaseCalled(this.state.turnSelected.controlTurnoDetalleSet[0].idControlTurnoDetalle)\r\n        .then(response=>{\r\n            this.setState({\r\n                turnDetailSelected:response.data,\r\n                called:response.data.noSolicitudes,\r\n            })\r\n            this.sendMessage({\r\n                consecutivo:this.state.turnSelected.noConsecutivo,\r\n                estacion:JSON.parse(this.state.estacion).nombre\r\n            })\r\n            this.setLoading(false)\r\n        }).catch(err=>{\r\n            toast.error('Error al actualizar llamado')\r\n            this.setLoading(false)\r\n        })\r\n    }\r\n\r\n    vacateStation=()=> {\r\n        if (this.state.turnSelected !== null) {\r\n            toast.warn('Finalice el turno en atención antes de dejar de atender esta estación!')\r\n        } else {\r\n            atencionService.vacateStation()\r\n                .then(response => {\r\n                    toast.success('Acción realizada con éxito')\r\n                    this.props.destroyStationAttended()\r\n                    window.location = \"atencion\"\r\n                }).catch(err => {\r\n                    toast.error('Error ocurrido')\r\n                })\r\n        }\r\n    }\r\n\r\n    loadSelectStationFromApi(){\r\n        atencionService.findOccupiedStation()\r\n        .then(response=>{\r\n            //console.log(response.data)\r\n        }).catch(err=>{\r\n            this.props.destroyStationAttended()\r\n        })\r\n    }\r\n\r\n    sendMessage = (msg) => {\r\n        console.log(msg)\r\n        this.clientRefTurn.sendMessage('/app/turn', JSON.stringify(msg));\r\n        this.clientRef.sendMessage('/app/hello', JSON.stringify(msg));\r\n       \r\n    }\r\n\r\n    render() {\r\n        const buttons = [\r\n            (this.state.turnSelected!==null&&<Button key=\"one\" startIcon={<Badge badgeContent={this.state.called} invisible={this.state.called===0} color=\"primary\"><VolumeUp /></Badge>} onClick={(e)=>this.increaseCalled()}>Rellamar turno</Button>),\r\n            (this.state.turnSelected!==null&&<Button key=\"two\" startIcon={<Check />} onClick={(e)=>this.onHandleFinalize()}>Finalizar turno</Button>),\r\n            <Button key=\"three\" startIcon={<ArrowForwardIosIcon />} onClick={(e)=>this.onClickNext()}>Siguiente turno</Button>\r\n        ];\r\n        return (\r\n            <Container maxWidth=\"xl\">\r\n                <Toolbar title={JSON.parse(this.state.estacion).nombre} vacateStation={this.vacateStation} />\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={12}>\r\n                        <Typography variant=\"h3\" gutterBottom style={{ margin: 5 }}>\r\n                            {(this.state.turnSelected!==null?'Atendiendo: '+this.state.turnSelected.noConsecutivo:'Sin turno en proceso')}\r\n                        </Typography>\r\n                        <Box\r\n                            sx={{\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                alignItems: 'center',\r\n                                '& > *': {\r\n                                    m: 1,\r\n                                },\r\n                            }}\r\n                        >\r\n                            <ButtonGroup size=\"large\" aria-label=\"large button group\">\r\n                                {buttons}\r\n                            </ButtonGroup>\r\n                        </Box>\r\n                    </Grid>\r\n                    {(this.state.turnSelected!==null&&!this.state.isLoading&&\r\n                    <Grid item xs={12} md={6}>\r\n                        <Typography variant=\"h3\" gutterBottom style={{ margin: 5 }}>\r\n                            Estado del turno\r\n                        </Typography>\r\n                        <Box sx={{ width: 500 }}>\r\n                            <BottomNavigation\r\n                                showLabels\r\n                                value={this.state.SelectedState}\r\n                                onChange={(event, newValue) => {\r\n                                    this.setState({SelectedState:newValue})\r\n                                    this.updateState(newValue)\r\n                                }}\r\n                            >\r\n                                {this.renderStates()}\r\n                            </BottomNavigation>\r\n                        </Box>\r\n                    </Grid>\r\n                    )}\r\n                </Grid>\r\n                <Dialog\r\n                    sx={{ '& .MuiDialog-paper': { width: '80%', maxHeight: 500 } }}\r\n                    maxWidth=\"md\"\r\n                    open={this.state.open}\r\n                >\r\n                    <DialogTitle>¿Finalizar atención del turno {this.state.turnSelected!==null?this.state.turnSelected.noConsecutivo:''}?</DialogTitle>\r\n                    <DialogContent dividers>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                            El turno será finalizado y no se puede revertir.\r\n                        </Typography>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button autoFocus onClick={this.handleCancel.bind(this)}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.handleOk.bind(this)}>Ok</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                {this.state.isLoading&&<LinearProgress />}\r\n                <SockJsClient\r\n                    url={SOCKET_URL}\r\n                    topics={['/topic/greetings']}\r\n                    onMessage={(msg) => { console.log(msg)}}\r\n                    ref={ (client) => { this.clientRef = client }}\r\n                    //headers={requestOptions}\r\n                    proxy= {{\r\n                            \"/ws/**\": {\r\n                            \"target\": \"http://localhost:8080/test-socket\",\r\n                            \"changeOrigin\": true\r\n                            }\r\n                        }}\r\n                        debug={ false }\r\n                />\r\n                <SockJsClient\r\n                    url={SOCKET_URL}\r\n                    topics={['/topic/greetings']}\r\n                    onMessage={(msg) => { console.log(msg)}}\r\n                    ref={ (client) => { this.clientRefTurn = client }}\r\n                    //headers={requestOptions}\r\n                    proxy= {{\r\n                            \"/ws/**\": {\r\n                            \"target\": \"http://localhost:8080/test-socket\",\r\n                            \"changeOrigin\": true\r\n                            }\r\n                        }}\r\n                        debug={ false }\r\n                />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n    Box,\r\n    makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport EstacionAtencion from \"./estacionAtencion\";\r\nimport Context from 'src/Context';\r\nimport AtencionTurno from \"./atencionTurno\";\r\nexport default class atencionView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoading:false\r\n        }\r\n    }\r\n\r\n    useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            backgroundColor: theme.palette.background.dark,\r\n            height: '100%',\r\n            paddingBottom: theme.spacing(3),\r\n            paddingTop: theme.spacing(3)\r\n        }\r\n    }));\r\n\r\n    render() {\r\n        const classes = this.useStyles;\r\n        return (\r\n            <Context.Consumer>\r\n                {({ stationAttended, destroyStationAttended }) => {\r\n                    return (\r\n                        <Page\r\n                            className={classes.root}\r\n                            title={\"Atención de turnos\"}\r\n                        >\r\n                            <Box\r\n                                display=\"flex\"\r\n                                flexDirection=\"column\"\r\n                                height=\"100%\"\r\n                                justifyContent=\"center\"\r\n                                marginTop='15px'\r\n                            >\r\n                                {(stationAttended===null||stationAttended===undefined)&&\r\n                                <EstacionAtencion />}\r\n                                {(stationAttended!==null&&stationAttended!==undefined)&&\r\n                                <AtencionTurno estacion={stationAttended} destroyStationAttended={destroyStationAttended}/>}\r\n                            </Box>\r\n                        </Page>\r\n                    )\r\n                }}\r\n            </Context.Consumer>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Card,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Results = ({ className, data, ...rest }) => {\r\n  const classes = useStyles();\r\n  const columns = [\r\n    \r\n    { field: 'consecutivo', headerName: 'Turno', minWidth: 300,flex: 3 },\r\n    { field: 'estacion', headerName: 'Ventanilla', minWidth: 300,flex: 3 },\r\n    ];\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <div style={{ minHeight: 500, height:500,  width: '100%' }}>\r\n        <DataGrid rows={data} columns={columns} pagination={false} hideFooterPagination />\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  data: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Results;\r\n","import AuthenticationService from '../../../service/AuthenticationService';\r\nimport axios from 'axios'\r\nconst API_URL = AuthenticationService.getApiUrl();\r\n\r\n\r\nclass TvService {\r\n\r\n    findTurnToShow() {\r\n        return axios.get(`${API_URL}/turno/show`);\r\n    }\r\n}\r\n\r\nexport default new TvService();","import React, { Component } from \"react\";\r\nimport {\r\n    Box,\r\n    Container,\r\n    Dialog,\r\n    DialogContent,\r\n    Grid,\r\n    makeStyles,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Context from \"src/Context\";\r\nimport Results from \"./Results\";\r\nimport SockJsClient from 'react-stomp';\r\nimport tvService from \"./service/tvService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst SOCKET_URL = 'http://74.208.187.67:8080/Turnos/test-socket';\r\nexport default class TvView extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoading: false,\r\n            message: [],\r\n            open: false,\r\n            msg: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!'speechSynthesis' in window) return alert(\"Lo siento, tu navegador no soporta esta tecnología\");\r\n        this.loadturnToShow()\r\n    }\r\n\r\n    loadturnToShow() {\r\n        tvService.findTurnToShow()\r\n            .then(response => {\r\n                this.setState({ message: response.data })\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            backgroundColor: theme.palette.background.dark,\r\n            height: '100%',\r\n            paddingBottom: theme.spacing(3),\r\n            paddingTop: theme.spacing(3)\r\n        }\r\n    }));\r\n\r\n    sendMessage = (msg) => {\r\n        this.clientRef.sendMessage('/app/hello', JSON.stringify(msg));\r\n    }\r\n\r\n    onMessageReceived = (msg) => {\r\n        console.log(msg);\r\n        this.setState({ message: msg })\r\n    }\r\n\r\n    onMessageReceivedTurn = (msg) => {\r\n        console.log(msg);\r\n        let msgToListen = 'Turno ' + msg.consecutivo + ' en ' + msg.estacion\r\n        console.log(msgToListen)\r\n\r\n\r\n        let miPrimeraPromise = new Promise((resolve, reject) => {\r\n            // Llamamos a resolve(...) cuando lo que estabamos haciendo finaliza con éxito, y reject(...) cuando falla.\r\n            // En este ejemplo, usamos setTimeout(...) para simular código asíncrono.\r\n            // En la vida real, probablemente uses algo como XHR o una API HTML5.\r\n            this.speakMsg(msgToListen)\r\n            this.onHandleOpenModal(msgToListen)\r\n            setTimeout(function () {\r\n                resolve(\"¡Éxito!\"); // ¡Todo salió bien!\r\n            }, 3000);\r\n        });\r\n\r\n        miPrimeraPromise.then((successMessage) => {\r\n            // succesMessage es lo que sea que pasamos en la función resolve(...) de arriba.\r\n            // No tiene por qué ser un string, pero si solo es un mensaje de éxito, probablemente lo sea.\r\n            console.log(\"¡Sí! \" + successMessage);\r\n            this.setState({ open: false })\r\n        });\r\n    }\r\n\r\n    onConnected = () => {\r\n        console.log(\"Connected!!\")\r\n    }\r\n\r\n    // El click del botón. Aquí sucede la magia\r\n    speakMsg = (msg) => {\r\n        toast.info(msg, {\r\n            position: \"top-center\",\r\n            autoClose: 3000\r\n        })\r\n        let posibleIndice = 0\r\n        // Seleccionar estos idiomas por defecto, en caso de que existan\r\n        const IDIOMAS_PREFERIDOS = [\"es-MX\", \"es-US\", \"es-ES\", \"es_US\", \"es_ES\"];\r\n        let vocesDisponibles = speechSynthesis.getVoices();\r\n        posibleIndice = vocesDisponibles.findIndex(voz => IDIOMAS_PREFERIDOS.includes(voz.lang));\r\n        console.log({ vocesDisponibles })\r\n        let textoAEscuchar = msg;\r\n        let mensaje = new SpeechSynthesisUtterance();\r\n        //mensaje.voice = vocesDisponibles[$voces.value];\r\n        mensaje.voice = vocesDisponibles[posibleIndice];\r\n        mensaje.volume = 1;\r\n        mensaje.rate = 1;\r\n        mensaje.text = textoAEscuchar;\r\n        mensaje.pitch = 0.7;\r\n        // ¡Parla!\r\n        speechSynthesis.speak(mensaje);\r\n\r\n    };\r\n\r\n    onHandleOpenModal(msg) {\r\n        this.setState({\r\n            open: true,\r\n            msg: msg\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const classes = this.useStyles;\r\n        return (\r\n            <Context.Consumer>\r\n                {({ stationAttended, destroyStationAttended }) => {\r\n                    return (\r\n                        <Page\r\n                            className={classes.root}\r\n                            title={\"Lista de turnos\"}\r\n                        >\r\n                            <Box\r\n                                display=\"flex\"\r\n                                flexDirection=\"column\"\r\n                                height=\"100%\"\r\n                                justifyContent=\"center\"\r\n                                marginTop='15px'\r\n                            >\r\n                                <Container maxWidth={false} >\r\n                                    <Grid container spacing={2}>\r\n                                        <Grid item xs={6} md={6}>\r\n                                            <Results data={this.state.message} />\r\n                                        </Grid>\r\n                                        <Grid item xs={6} md={6}>\r\n                                            <video controls autoPlay loop width=\"100%\" muted>\r\n                                                <source src={process.env.PUBLIC_URL + '/assets/video/mov_bbb.mp4'} type=\"video/mp4\" />\r\n                                                <p>Su navegador no soporta video HTML5. Aquí hay un <a href=\"rabbit320.mp4\">enlace al video</a>.</p>\r\n                                            </video>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Container>\r\n                            </Box>\r\n                            <Dialog\r\n                                sx={{ '& .MuiDialog-paper': { width: '80%', maxHeight: 500 } }}\r\n                                maxWidth=\"md\"\r\n                                open={this.state.open}\r\n                            >\r\n                                <DialogContent>\r\n                                    <Typography variant=\"h1\" component=\"div\" gutterBottom>\r\n                                        {this.state.msg}\r\n                                    </Typography>\r\n                                </DialogContent>\r\n                            </Dialog>\r\n                            <SockJsClient\r\n                                url={SOCKET_URL}\r\n                                topics={['/topic/greetings']}\r\n                                onMessage={(msg) => { this.onMessageReceived(msg) }}\r\n                                ref={(client) => { this.clientRef = client }}\r\n                                //headers={requestOptions}\r\n                                proxy={{\r\n                                    \"/ws/**\": {\r\n                                        \"target\": \"http://74.208.187.67:8080/Turnos/test-socket\",\r\n                                        \"changeOrigin\": true\r\n                                    }\r\n                                }}\r\n                                debug={false}\r\n                            />\r\n                            <SockJsClient\r\n                                url={SOCKET_URL}\r\n                                topics={['/topic/turn']}\r\n                                onMessage={(msg) => { this.onMessageReceivedTurn(msg) }}\r\n                                ref={(client) => { this.clientRef = client }}\r\n                                //headers={requestOptions}\r\n                                proxy={{\r\n                                    \"/ws/**\": {\r\n                                        \"target\": \"http://74.208.187.67:8080/Turnos/test-socket\",\r\n                                        \"changeOrigin\": true\r\n                                    }\r\n                                }}\r\n                                debug={false}\r\n                            />\r\n                        </Page>\r\n                    )\r\n                }}\r\n            </Context.Consumer>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport DashboardLayout from 'src/layouts/DashboardLayout';\r\nimport MainLayout from 'src/layouts/MainLayout';\r\nimport AccountView from 'src/views/account/AccountView';\r\nimport DashboardView from 'src/views/reports/DashboardView';\r\nimport LoginView from 'src/views/auth/LoginView';\r\nimport NotFoundView from 'src/views/errors/NotFoundView';\r\nimport RegisterView from 'src/views/auth/RegisterView';\r\nimport LogoutComponent from './views/auth/LogoutComponent';\r\nimport AuthenticationService from './service/AuthenticationService';\r\nimport Usuario2 from 'src/views/account/AccountView/indexUsuario';\r\nimport Stations from './views/station';\r\nimport StationView from './views/station/stationView';\r\nimport Categories from './views/categoryService';\r\nimport Category from './views/categoryService/category';\r\nimport Services from './views/services';\r\nimport ServiceView from './views/services/serviceView';\r\nimport KioskoView from './views/kiosko/kioskoView';\r\nimport AtencionView from './views/atencion';\r\nimport TvView from './views/tv';\r\n\r\nAuthenticationService.setupAxiosInterceptors(\r\n  AuthenticationService.createJWTToken(\r\n      AuthenticationService.getTokenUser())\r\n)\r\n\r\nconst isUserLogin = () => {\r\n  //console.log({path, element})\r\n  if (AuthenticationService.isUserLoggedIn()) {\r\n    //console.log(\"1\")\r\n    return true\r\n  } else {\r\n    //console.log(\"2\")\r\n    return false\r\n  }\r\n}\r\n\r\nconst routes = [\r\n  {\r\n    path: 'turnos/app/',\r\n    element: <DashboardLayout />,\r\n    children: [\r\n      { path: 'users', element: isUserLogin()?<AccountView />:<Navigate to=\"/turnos/login\" /> },\r\n      { path: 'dashboard', element: isUserLogin()?<DashboardView />:<Navigate to=\"/turnos/login\" /> },\r\n      { path: 'usuario', element: isUserLogin()?<Usuario2 />:<Navigate to=\"/turnos/login\" /> },\r\n      { path: 'stations', element: isUserLogin()?<Stations />:<Navigate to=\"/turnos/login\" /> },\r\n      { path: 'station', element: isUserLogin()?<StationView/>:<Navigate to=\"/turnos/login\" /> },\r\n      { path: 'categories', element: isUserLogin()?<Categories/>:<Navigate to=\"/turnos/login\" /> },\r\n      { path: 'category', element: isUserLogin()?<Category/>:<Navigate to=\"/turnos/login\" /> },\r\n      { path: 'services', element: isUserLogin()?<Services/>:<Navigate to=\"/turnos/login\" /> },\r\n      { path: 'service', element: isUserLogin()?<ServiceView/>:<Navigate to=\"/turnos/login\" /> },\r\n      { path: 'atencion', element: isUserLogin()?<AtencionView/>:<Navigate to=\"/turnos/login\" /> },\r\n      { path: '/logout', element: <LogoutComponent /> },\r\n      { path: '*', element: <Navigate to=\"/turnos/404\" /> }\r\n    ]\r\n  },\r\n  {\r\n    path: 'turnos/',\r\n    element: <MainLayout />,\r\n    children: [\r\n      { path: 'login', element: <LoginView /> },\r\n      { path: 'register', element: <RegisterView /> },\r\n      { path: '404', element: <NotFoundView /> },\r\n      { path: '/', element: <LoginView /> },\r\n      { path: '*', element: <Navigate to=\"/turnos/404\" /> },\r\n      {path: '/kiosko', element: <KioskoView />},\r\n      { path: '/tv', element: <TvView/> },\r\n    ]\r\n  }\r\n];\r\n\r\n\r\nexport default routes","import 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport React from 'react';\r\nimport { useRoutes } from 'react-router-dom';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport GlobalStyles from 'src/components/GlobalStyles';\r\nimport 'src/mixins/chartjs';\r\nimport theme from 'src/theme';\r\nimport routes from 'src/routes';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Context from './Context';\r\n\r\nconst App = () => {\r\n  const routing = useRoutes(routes);\r\n\r\n  return (\r\n    <Context.Provider>\r\n      <Context.Consumer>\r\n        {({ isAuth }) => {\r\n          return (\r\n            <ThemeProvider theme={theme}>\r\n              <GlobalStyles />\r\n              {routing}\r\n              <ToastContainer pauseOnFocusLoss={false} />\r\n            </ThemeProvider>\r\n          )\r\n        }}\r\n      </Context.Consumer>\r\n\r\n\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n), document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}